<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content"><channel><title>Inuk Blog</title><description>Tech with a human perspective</description><link>https://www.inuk.blog</link><language>en</language><lastBuildDate>Fri, 13 Aug 2021 11:37:14 +0200</lastBuildDate><pubDate>Fri, 13 Aug 2021 11:37:14 +0200</pubDate><ttl>250</ttl><atom:link href="https://www.inuk.blog/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://www.inuk.blog/posts/sorry-for-the-mess</guid><title>Sorry for the mess</title><description>We are rebuilding</description><link>https://www.inuk.blog/posts/sorry-for-the-mess</link><pubDate>Thu, 11 Jun 2020 19:27:00 +0200</pubDate><content:encoded><![CDATA[<h1>Sorry for the mess</h1><p>We are currently migrating our blog to Sundell's <a href="https://github.com/JohnSundell/Publish">Publish</a> from <a href="https://ghost.org/">Ghost</a>. There is no beef between us and Ghost, we just felt constrained, and Publish allows us to do absolutely everything we want. This added flexibility is why we went with Publish, as and added bonus, we also now have all our blog posts as raw markdown files.</p><p>Currently our website doesn't look ideal, and everything will change slowly. In the meanwhile thank you for your patience and understanging.</p><p>If you see any anormalities from our earlier posts, please don't hesitate to reach out to Bastian on <a href="https://twitter.com/BastianInuk">Twitter</a>.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/is-plex-pass-worth</guid><title>Is Plex Pass Worth?</title><description>I've been a plex pass member for a long-ish time, and to me it's been all the money worth. Wether or not it's worth it for you, is up to you to decide, but I'm going to outline why it's worth it to me.</description><link>https://www.inuk.blog/posts/is-plex-pass-worth</link><pubDate>Sun, 7 Jun 2020 21:30:00 +0200</pubDate><content:encoded><![CDATA[<p>I've been a plex pass member for a long-ish time, and to me it's been all the money worth. Wether or not it's worth it for you, is up to you to decide, but I'm going to outline why it's worth it to me:</p><h2>Webhooks</h2><p>The biggest and most important reason to me, is the webhooks. Look, I'm a lazy man, and if I can get the computer to do a task for me, even if it's to avoid yelling to the lady in the tube "Movie mode", I'm all for it. Webhooks allows me to do just that.</p><p>In his great post, <a href="https://medium.com/plexlabs/homebridge-sensors-for-plex-550b572be54d">Alex describes</a> how he combines Homekit and Plex to make the ultimate movie experience. I've in turn taken the liberty to do the same, much in joy of me and my significant other. This functionality was so great, that I almost wend out to get a popcorn machine, but the lady of the house vetoed. 😅</p><h2>Plexamp</h2><p>I love listening to music, so much so that I'm a subscriber to both Spotify <em>and</em> Apple Music. My most used music player however is Plexamp. It is currently only usable for plex pass members, but it's a gorgeous player, which uses the users plex library for music, something I really appreciate. I'll be writing more about plexamp in the comming time, but for now know that I really appreciate this app.</p><h2>Plex Dash</h2><p>Keeping an eye on my plex server is a pass time of mine, but the web interface sucks on mobile. That's why when I saw the Plex Dash app, it goes without saying I threw everything I had in my hands, including this very blog post, just to <a href="https://www.inuk.blog/plex-dash/">write about it</a>.</p><h2>Multiuser</h2><p>More and more streaming services offers one login to multiple users. Plex is no exception to this, that is, if you're a Plex pass user. The lady of the house and I share a TV, but we don't always watch the same series together. Synchronising the series and movies to a given user is a super nice to have, and allowing us to do this in such an elegant way is even more so.</p><h2>Offline playback</h2><p>I take the train a lot, even during these quarantimes, it's part of my job. I used to fly a bunch too. Therefore offline playback is almost a must for me, so I can watch my series on the go. Offline playback is the only reason I got Plex pass, but all the other perks have made it feel worth it to me.</p><p>I hope I could aid you in your decision as to if plex pass is worth it to you, I at least know it's worth it to me.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/environmentobjects-and-document-picker</guid><title>EnvironmentObjects and UIDocumentPicker</title><description>Need to access EnvironmentObjects in UIDocumentPicker or any other UIKit view? Read more to know how I did it.</description><link>https://www.inuk.blog/posts/environmentobjects-and-document-picker</link><pubDate>Tue, 26 May 2020 11:27:00 +0200</pubDate><content:encoded><![CDATA[<p>For my current project, I needed to have some UIKit code which manipulated an <code>@EnvironmentObject</code>, but unfortunately UIKit doesn't know aboutthis property wrapper, I had to find an alternative. The <code>@EnvironmentObject</code> in question, was to be manipulated by a <code>UIDocumentPickerDelagate</code>'s <code>documentPicker(_:)</code>, this specific method gets called when a file gets picked, and I wanted to tell my <code>@EnvironmentObject</code> that a file was picked.</p><p>My solution is to bring the handling of selected documents up into SwiftUI. For starters, let me show you the simplest part of my code, the picker delegate:</p><pre><code><span class="keyword">typealias</span> URLS = ([<span class="type">URL</span>]) -&gt; ()
<span class="keyword">typealias</span> voidFunc = () -&gt; ()

<span class="keyword">class</span> DocumentDelagate: <span class="type">UIView</span> ,<span class="type">UIDocumentPickerDelegate</span> {
    <span class="keyword">var</span> onOpen: <span class="type">URLS</span> = { <span class="call">print</span>($0) }
    <span class="keyword">var</span> onCancel: voidFunc = {}
    
    <span class="keyword">func</span> documentPicker(<span class="keyword">_</span> controller: <span class="type">UIDocumentPickerViewController</span>,
                        didPickDocumentsAt urls: [<span class="type">URL</span>]) {
        <span class="call">onOpen</span>(urls)
    }
    
    <span class="keyword">func</span> documentPickerWasCancelled(<span class="keyword">_</span> controller: <span class="type">UIDocumentPickerViewController</span>) {
        <span class="call">onCancel</span>()
    }
    
}

</code></pre><p>It's a simple subclass of <code>UIView</code> and <code>UIDocumentPickerDelagate</code>. The reason I subclass <code>UIView</code> is so I don't have to add a lot of protocol stubs from <code>NSProtocol</code>. This unfortunately means making a custom init is a bit difficult, as such I gave my callbacks default values, but fret not, this is changed in my UIKit SwiftUI wrapper.</p><pre><code><span class="keyword">struct</span> DocumentPickerController: <span class="type">UIViewControllerRepresentable</span> {
    
    <span class="keyword">typealias</span> UIViewControllerType = <span class="type">DocumentPicker</span>
    <span class="keyword">let</span> picker: <span class="type">UIViewControllerType</span>
    
    <span class="keyword">init</span>(documentTypes: [<span class="type">String</span>],
         onOpen:  <span class="keyword">@escaping</span> <span class="type">URLS</span>,
         onCancel: <span class="keyword">@escaping</span> voidFunc) {
        <span class="keyword">self</span>.<span class="property">picker</span> = <span class="type">UIViewControllerType</span>(documentTypes: documentTypes, in: .<span class="dotAccess">open</span>)
        <span class="keyword">let</span> delagate = <span class="type">DocumentDelagate</span>()
        delagate.<span class="property">onOpen</span> = onOpen
        delagate.<span class="property">onCancel</span> = onCancel
        picker.<span class="property">documentDelegate</span> = delagate
    }
    
    <span class="keyword">func</span> updateUIViewController(<span class="keyword">_</span> uiViewController: <span class="type">UIViewControllerType</span>, context: <span class="type">Context</span>) {
        
    }
    
    <span class="keyword">func</span> makeUIViewController(context: <span class="type">Context</span>) -&gt; <span class="type">UIViewControllerType</span> {
        picker
    }
    
}
</code></pre><p>The type alias is for quicker iterations and testing between needing to supclass the pickerview or not. As I have a reference to the delagate in the supclassed document picker, I only need it in <code>init</code> so I can mmodify the callback variables. And then I instantiate the supclassed document picker, as well as return the picker in <code>makeUIViewController(context:)</code>, as you can see, I've still yet to bring in <code>@EnvironmentObject</code>, that'll come later. The subclassed document picker is basic, looks as following:</p><pre><code><span class="keyword">class</span> DocumentPicker: <span class="type">UIDocumentPickerViewController</span> {
    <span class="keyword">var</span> documentDelegate: <span class="type">UIDocumentPickerDelegate</span>? = <span class="keyword">nil
    
    override func</span> viewDidLoad() {
        <span class="keyword">super</span>.<span class="call">viewDidLoad</span>()
        
        <span class="keyword">self</span>.<span class="property">delegate</span> = <span class="keyword">self</span>.<span class="property">documentDelegate</span>
    }
}
</code></pre><p>The supclassed document picker is not interesting. All it does is keep a strong instance of the delagate and assign it to its superclass's weak instance of the delagate. This is so the delagate is not deallocated when needed. And to finish it all off, I wrap this view into a neat little SwiftUI <code>View</code> which looks as following:</p><pre><code><span class="keyword">struct</span> DocumentPickerButton&lt;Label: <span class="type">View</span>&gt;: <span class="type">View</span> {
    <span class="keyword">@State
    var</span> showPicker = <span class="keyword">false
    
    private let</span> pickerController: <span class="type">DocumentPickerController</span>
    <span class="keyword">private let</span> onOpen: <span class="type">URLS</span>
    <span class="keyword">private let</span> onCancel: voidFunc
    <span class="keyword">private let</span> view: () -&gt; (<span class="type">Label</span>)
    
    <span class="keyword">init</span>(documentTypes: [<span class="type">String</span>],
         onOpen: <span class="keyword">@escaping</span> ([<span class="type">URL</span>]) -&gt; (),
         onCancel: <span class="keyword">@escaping</span> () -&gt; () = {},
         <span class="keyword">@ViewBuilder</span> view: <span class="keyword">@escaping</span> () -&gt; (<span class="type">Label</span>))
    {
        <span class="keyword">self</span>.<span class="property">documentTypes</span> = documentTypes
        <span class="keyword">self</span>.<span class="property">onOpen</span> = onOpen
        <span class="keyword">self</span>.<span class="property">onCancel</span> = onCancel
        <span class="keyword">self</span>.<span class="property">view</span> = view
    }
    
    <span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> {
        <span class="type">Button</span>(action: {<span class="keyword">self</span>.<span class="property">showPicker</span>.<span class="call">toggle</span>() }) {
            <span class="call">view</span>()
        }
        .<span class="call">sheet</span>(isPresented: <span class="keyword">self</span>.$showPicker) {
            <span class="type">DocumentPickerController</span>(documentTypes: <span class="keyword">self</span>.<span class="property">documentTypes</span>,
                                     onOpen: <span class="keyword">self</span>.<span class="property">onOpen</span>,
                                     onCancel: <span class="keyword">self</span>.<span class="property">onCancel</span>)
        }
    }
}
</code></pre><p>This looks a bit complicated but, but let's break it down a bit. The init takes the callback, and as not everyone needs have an <code>onCancel</code> handler, I made a default empty implementation. Reason I didn't instantiate the picker here, is because I don't want the picker view polluting in the background, it might not matter but alas. The button is an action, which takes the <code>view</code> from the initializer as label. I then spawn the document picker, when the button is pressed. The document browser view from the picker is in a sheet, this is to closer match the look and behaviour from UIKit, you can of course have the browser in any view you prefer.</p><p>And I promised some <code>@EnvironmentObject</code>, how did I use that? Once the document picker view is a SiftUI view, I can bring in the object like I usually would, and the way I call <code>DocumentPickerButton</code> in my app, looks a little like this:</p><pre><code><span class="keyword">struct</span> ContentView: <span class="type">View</span> {
    <span class="keyword">@EnvironmentObject var</span> player: <span class="type">Player</span>
    <span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> {
        <span class="type">NavigationView</span> {
            <span class="type">List</span> {
                <span class="type">ForEach</span>(player.<span class="property">queue</span>, id: \.<span class="keyword">self</span>) { song <span class="keyword">in</span>
                    <span class="type">SongCellView</span>(song: song)
                }
            }.<span class="call">onAppear</span> {
                <span class="type">UITableView</span>.<span class="call">appearance</span>()
                    .<span class="dotAccess">separatorStyle</span> = .<span class="dotAccess">none</span>
            }
            .<span class="call">navigationBarTitle</span>(<span class="type">Text</span>(<span class="string">"Song"</span>))
            .<span class="call">navigationBarItems</span>(trailing: 
                <span class="type">DocumentPickerButton</span>(documentTypes: [<span class="string">"public.mp3"</span>],
                                     onOpen: <span class="keyword">self</span>.<span class="property">openSong</span>){
                    <span class="type">Image</span>(systemName: <span class="string">"plus.circle.fill"</span>)
                        .<span class="call">resizable</span>()
            } )
        }
        
    }
    
    <span class="keyword">func</span> openSong (urls: [<span class="type">URL</span>]) -&gt; () {
        <span class="call">print</span>(<span class="string">"Reading URLS"</span>)
        urls.<span class="call">forEach</span> { url <span class="keyword">in
            guard</span> url.<span class="call">startAccessingSecurityScopedResource</span>() <span class="keyword">else</span> {
                <span class="call">print</span>(<span class="string">"Failed to open the file"</span>)
                <span class="keyword">return</span>
            }
            <span class="call">print</span>(url)
            <span class="keyword">defer</span> { url.<span class="call">stopAccessingSecurityScopedResource</span>() }
            
            <span class="keyword">guard let</span> bookmark = <span class="keyword">try</span>? url.<span class="call">bookmarkData</span>() <span class="keyword">else</span> {
                <span class="keyword">return</span>
            }
            
            <span class="keyword">let</span> defaults = <span class="type">UserDefaults</span>.<span class="property">standard</span>
            
            <span class="keyword">var</span> array = defaults.<span class="call">array</span>(forKey: <span class="string">"Songs"</span>) <span class="keyword">as</span>? [<span class="type">Data</span>]
            array?.<span class="call">append</span>(bookmark)
            defaults.<span class="call">set</span>(array, forKey: <span class="string">"Songs"</span>)
            
            <span class="keyword">self</span>.<span class="property">player</span>.<span class="property">song</span> = .<span class="call">AVPlayer</span>(.<span class="keyword">init</span>(url: url))
        }
    }
}
</code></pre><p>And this is how I brought <code>@EnvironmentObject</code> into the world of UIKit.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/responsive-darkmode-uikit</guid><title>Responsive Dark Mode in UIKit</title><description></description><link>https://www.inuk.blog/posts/responsive-darkmode-uikit</link><pubDate>Sun, 24 May 2020 21:15:00 +0200</pubDate><content:encoded><![CDATA[<p>I was looking for a way to bring out the AirPlay menu in SwiftUI when I found this <a href="https://stackoverflow.com/a/60085342/3588557">StackOverflow Answer</a>. Issue with that solution is the AirPlay button not changing colorscheme when the rest of the system does: <img src="https://www.inuk.blog/content/images/2020/05/output-2.gif"/> There's a quick and easy fix however! <code>UIKit</code> has a nifty <code>traitCollectionDidChange(_:)</code> function, which gets called when — amongst other — dark mode turns on. So to fix this interesting bug, you have to bring <code>button</code> out to the class, and change the colour in <code>traitCollectionDidChange(_:)</code> so it looks as follows:</p><pre><code><span class="keyword">class</span> AirPLayViewController: <span class="type">UIViewController</span> {
    <span class="keyword">let</span> button = <span class="type">UIButton</span>()
    <span class="keyword">override func</span> viewDidLoad() {
        <span class="keyword">super</span>.<span class="call">viewDidLoad</span>()
        
        <span class="keyword">let</span> isDarkMode = <span class="keyword">self</span>.<span class="property">traitCollection</span>.<span class="property">userInterfaceStyle</span> == .<span class="dotAccess">dark</span>
        
        
        <span class="keyword">let</span> boldConfig = <span class="type">UIImage</span>.<span class="type">SymbolConfiguration</span>(scale: .<span class="dotAccess">large</span>)
        <span class="keyword">let</span> boldSearch = <span class="type">UIImage</span>(systemName: <span class="string">"airplayaudio"</span>,
                                 withConfiguration: boldConfig)

        button.<span class="call">setImage</span>(boldSearch, for: .<span class="dotAccess">normal</span>)
        button.<span class="property">frame</span> = <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="number">0</span>, width: <span class="number">40</span>, height: <span class="number">40</span>)
        button.<span class="property">tintColor</span> = isDarkMode ? .<span class="dotAccess">white</span> : .<span class="dotAccess">black</span>

        button.<span class="call">addTarget</span>(<span class="keyword">self</span>,
                         action: <span class="keyword">#selector</span>(<span class="keyword">self</span>.<span class="call">showAirPlayMenu</span>(<span class="keyword">_</span>:)),
                         for: .<span class="dotAccess">touchUpInside</span>)
        
        <span class="keyword">self</span>.<span class="property">view</span>.<span class="call">addSubview</span>(button)
    }
    
    <span class="keyword">override func</span> traitCollectionDidChange(<span class="keyword">_</span> previousTraitCollection: <span class="type">UITraitCollection</span>?) {
        <span class="keyword">super</span>.<span class="call">traitCollectionDidChange</span>(previousTraitCollection)
        <span class="keyword">let</span> isDarkMode = <span class="keyword">self</span>.<span class="property">traitCollection</span>.<span class="property">userInterfaceStyle</span> == .<span class="dotAccess">dark</span>
        button.<span class="property">tintColor</span> = isDarkMode ? .<span class="dotAccess">white</span> : .<span class="dotAccess">black</span>
    }
    
    <span class="comment">// copied from https://stackoverflow.com/a/44909445/7974174</span>
    <span class="keyword">@objc func</span> showAirPlayMenu(<span class="keyword">_</span> sender: <span class="type">UIButton</span>){ 
        <span class="keyword">let</span> rect = <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="number">0</span>, width: <span class="number">0</span>, height: <span class="number">0</span>)
        <span class="keyword">let</span> airplayVolume = <span class="type">MPVolumeView</span>(frame: rect)
        airplayVolume.<span class="property">showsVolumeSlider</span> = <span class="keyword">false
        self</span>.<span class="property">view</span>.<span class="call">addSubview</span>(airplayVolume)
        <span class="keyword">for</span> view: <span class="type">UIView</span> <span class="keyword">in</span> airplayVolume.<span class="property">subviews</span> {
            <span class="keyword">if let</span> button = view <span class="keyword">as</span>? <span class="type">UIButton</span> {
                button.<span class="call">sendActions</span>(for: .<span class="dotAccess">touchUpInside</span>)
                <span class="keyword">break</span>
            }
        }
        airplayVolume.<span class="call">removeFromSuperview</span>()
    }
}
</code></pre><p>I hope my quick tip helped, if only for a bit!</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/elgato-for-productivity</guid><title>Elgato for Productivity</title><description>It's no secret that I am a huge fan of Elgato. Their Thunderbolt Dock Pro and H60S+ are products I use near-daily, and the stream deck mobile app is something I try to work into everything, where possible!</description><link>https://www.inuk.blog/posts/elgato-for-productivity</link><pubDate>Sat, 16 May 2020 13:10:00 +0200</pubDate><content:encoded><![CDATA[<p>It's no secret that I am a huge fan of Elgato. Their Thunderbolt Dock Pro and H60S+ are products I use near-daily, and the stream deck mobile app is something I try to work into everything, where possible!</p><p>Elgato has for as long as I remember marketed their products for the games streaming market, but I think they could benefit from marketing for productivity as well. The only product I can think of, which isn't marketed for streaming, is the Pro Dock. I rarely see marketing material for productivity for their other products, most notably the Stream deck, and the rest of this post will be about how some of their offerings can be used for productivity.</p><h2>Stream Deck</h2><p>A keyboard of varying sizes, with a programmable array of keys. From the name to the marketing material, this device is clearly aimed at streamers, but there is a few productivity uses, some of which are advertised once in a blue moon. In reality the stream deck is a productivity beast. My most used trigger, is a save and build action for visual studio code, which reduces my <code>⎋ → :w → ⌘⇪B</code> to just pressing a single button on my phone. Keyboard Maestro — a popular automation app on macOS — supports the stream deck, meaning you can get a long way with the stream deck, the Automators podcast gets further into this topic. Adding support for the stream deck in your own software, is as easy as making a websockets client if you wish to.</p><p>With a recent update, the iOS gained Shortcuts support, meaning a given user can really customize their actions, by combining them with iOS Shortcut actions. Granted I haven't used this as much as I probably should, I do have a Shortcut setting the lights in the room I use for streaming and then send an Elgato action to the computer starting the stream and tweeting the link.</p><h2>Thunderbolt Pro Dock</h2><p>This device is not at all marketed for streamers, and is easily my favourite Elgato product! It's the first of their products I purchased, and it serves me well, making my desk static in terms of peripherals, which I only need to connect one cable to my MacBook to work. I see why it's not marketed for streamers, it's kind of difficult to spin it that way, and I seriously love it.</p><h2>Capture Cards</h2><p>Elgato's main money maker is possibly their capture cards, some of which sends the video feed as a webcam feed. This means that a given person can use their capture card and a high end camera to get a much better image than a capture card could ever give. This is great for not only conference calls, but having a giant viewfinder in a computer is also pretty nice for video making! If you're into NDI, then you can send a feed from OBS to any NDI receiver, and using a capture card for this allows for a lot of flexibility.</p><h2>Green Screen, Key Light and Multi Mount</h2><p>Their relatively cheap and easy to use green screen, paired with some key lights, makes for a versatile studio, not only for live streaming, but anything visual. I'm personally considering the green screen for my YouTube channel at least.</p><p>The multi mount is a great device, it's like a small and cheap C-stand for your desk. Initially only available for key lights customer, they are flexible and — as with anything else Elgato — super easy to use. I'm thinking of getting one to hang my lav mic on and another one for my Sony camera. This will prove useful for both my tech videos as well as when I live stream!</p><p>What do you think. Is Elgato a brand you associate with productivity, or is it streaming only?</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/plex-dash</guid><title>Plex Dash</title><description>Wanting to rant about difficulty of ripping DRM from iTunes, Plex announced something good.</description><link>https://www.inuk.blog/posts/plex-dash</link><pubDate>Mon, 4 May 2020 20:00:00 +0200</pubDate><content:encoded><![CDATA[<h1>Plex Dash</h1><p>I initially wanted to spend this month's server post to complain about the state of ripping DRM from iTunes movies, but then Plex <a href="https://www.plex.tv/blog/two-delicious-new-apps-from-plex-labs/">released</a> their <a href="https://apps.apple.com/dk/app/plexamp/id1500797510">Dash app</a>. In short, it's taking the management of your server into your pocket, and currently, it's in a very early and simple stage.</p><h1>See what's playing</h1><p>In the app, you can see what's currently being played in your chosen server.</p><img src="https://www.inuk.blog/content/images/2020/05/IMG_3421.png"/><p><em>What's Playing</em></p><p>You can even get history of the media and user as well as edit metadata live from the now playing screen by pressing the three dots icon:</p><img src="https://www.inuk.blog/content/images/2020/05/IMG_3423.png"/><p><em>Live metadata</em></p><h1>Search</h1><p>The search field will bring up anything that matches the keywords you typed in: <img src="https://www.inuk.blog/content/images/2020/05/IMG_3425.png"/></p><p><em>Searching for Beyond the Boundary</em></p><h1>Top Charts</h1><p>You can also get insight into the most popular media on your Plex server. This is useful to better cater your site to your audience. The downside, however, is that the history doesn't go as far back as one might like. I'm not sure whether this is because my Plex server deletes the data or if they've only prepared the data for a short while, but as is, it's usefulness is limited.</p><img src="https://www.inuk.blog/content/images/2020/05/IMG_3427.png"/><p><em>Smile Down the Runway is top chart</em></p><h1>Libraries</h1><p>In the library tab you can view and manage your libraries.</p><h2>Overview</h2><img src="https://www.inuk.blog/content/images/2020/05/IMG_3429.png"/><p><em>Libaries overview</em></p><p>In the overview you can see and edit your libraries. <img src="https://www.inuk.blog/content/images/2020/05/IMG_3431.png"/></p><p>You, also, scan your libraries files from here; something I have personally done a fair bit of from the web interface on my phone, which is not the best experience in the world, making this is a welcome addition.</p><h2>Cards View</h2><p>In card view, you can edit the name and the representative art for any piece of media you have on the server. <img src="https://www.inuk.blog/content/images/2020/05/Anime-Card.gif"/></p><h1>Conclusion</h1><p>I'm really happy that Plex has released this app, and it has a few quality of life improving features. As always, I'm excited to see how this app will improve in the future, as well as see what else is comming through Plex Labs.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/a-piece-about-animal-crossing</guid><title>"A rant about Animal Crossing: New Horizon"</title><description></description><link>https://www.inuk.blog/posts/a-piece-about-animal-crossing</link><pubDate>Sun, 3 May 2020 21:11:00 +0200</pubDate><content:encoded><![CDATA[<p>Couch co-op sucks. No seriously, first off if a pair shares a Switch, they also share an island in AC:NH. When they want to play together, one player has to be leader and the other follower, the folower has no freedom what so ever; depending on who you're playing with, you get to swap who's leader and who's follower by shaking the joy-cons. There's nothing for the follower to do, but aid the leader in their daily endeavours. The aid can be hitting rocks or catching bugs and the like, issue is the follower doesn't get an item beyon tools, so everything they gather ends in the recycle bin for the leader to grab.</p><p>I really like AC:NH, I got 45 hours registered, but man couch co-op sucks.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/the-apple-ecosystem</guid><title>The Apple Ecosystem</title><description>You may have heard about the #AppleEcosystem and wonder what it is.</description><link>https://www.inuk.blog/posts/the-apple-ecosystem</link><pubDate>Sun, 26 Apr 2020 18:26:00 +0200</pubDate><content:encoded><![CDATA[<p>You may have heard about the #AppleEcosystem and wonder what it is. What I've personally have heard the most is it's iMessages, but there's a little more to it than that. iMessage and AirDrop are the two I can think of which is for more people; AirDrop is a way to share content easy and fast, much like Bluetooth back in the flip phone days. What makes AirDrop great is ease of use, you just press the recipient in a list, once they accept, the content is on the recipient device almost instantly. When AirDropping to a device which share Apple ID, there's no need to accept the content.</p><p>Some of the other easy to name parts of the ecosystem ties into AirDrop. My favourite being universal pasteboard, allowing me to copy something on any of my Apple devices and paste it on any other Apple device, I use this all the time for Two Factor Authentication. As with iMessage, I can also send old-school SMS from my Mac, this is done over the iPhone, likewise I can also take and initiate old-school phone calls from my Mac.</p><p>These are only the tip of the iceberg of what the ecosystem is, but this is what I use on the daily, and misses every time I'm not at my Mac!</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/gh-student-pack</guid><title>GitHub for Students</title><description></description><link>https://www.inuk.blog/posts/gh-student-pack</link><pubDate>Sun, 19 Apr 2020 20:32:00 +0200</pubDate><content:encoded><![CDATA[<p>I may make a bold assumption in that most of my readers are students. And I can tell you that a bunch of my fellow students at my university don't actually know about this offer that GitHub has, so let me just mention it real quick. GitHub has partnered with a large number of companies, some of which already offers stuff to student like JetBrains, others does it exclusively through GitHub. Most if not all of these offers are unfortunately tech related, so that limits the appeal, but it's free, quick and easy to sign up to GitHub Studentpack and you get a bunch of great stuff from it, so check it out over at <a href="https://education.github.com/pack">https://education.github.com/pack</a>!</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/dedrm-remove-drm-from-books</guid><title>"DeDRM: Remove DRM from books"</title><description>Do you have books behind locks, and want to free them? In this post I'll go through how I remove DRM from my books</description><link>https://www.inuk.blog/posts/dedrm-remove-drm-from-books</link><pubDate>Sun, 12 Apr 2020 20:53:00 +0200</pubDate><content:encoded><![CDATA[<p>It can be advantageous to remove DRM from ebooks at times. I like to read my books in specific readers, par example. Fortunately <a href="https://github.com/apprenticeharper/DeDRM_tools">DeDRM</a> is an easy to use tool, which allows removing DRM from Adobe Digital Editions books. To install simply grab the <a href="https://github.com/apprenticeharper/DeDRM_tools/releases">latest release</a>. You'll also need <a href="https://calibre-ebook.com">Calibre</a> installed. Then you open preferences in Calibre and navigate to plugins:</p><img src="https://www.inuk.blog/content/images/2020/04/Screenshot-2020-04-12-at-22.48.53.png"/><p>From here you press the "load plugin from file" button:</p><img src="https://www.inuk.blog/content/images/2020/04/Screenshot-2020-04-12-at-22.49.35.png"/><p>In finder, navigate to the "DeDRM_Plugin.zip" and select that. <img src="https://www.inuk.blog/content/images/2020/04/Screenshot-2020-04-12-at-22.50.01.png"/> Just say "Yes" to the security risc warning. Once the plugin is installed, you simply download your books in ADE, as you usually might, and navigate to their ePub files. Getting the ePub files from ADE is as simple as rigth clicking the book in ADE:</p><img src="https://www.inuk.blog/content/images/2020/04/Screenshot-2020-04-12-at-22.52.52.png"/><p>Then you just drag the book into Calibre, and let the plugin seamlessly do its magic.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/scroll-ad-free-and-guilt-free</guid><title>"Scroll: Ad-free and guilt free"</title><description>Want to browse an ad-free web, but still want to keep websites alive?</description><link>https://www.inuk.blog/posts/scroll-ad-free-and-guilt-free</link><pubDate>Sun, 5 Apr 2020 07:44:00 +0200</pubDate><content:encoded><![CDATA[<p>I watched a <a href="https://youtu.be/6YnbDU9kPYw">LTT Clip</a> about <a href="https://support.mozilla.org/en-US/kb/firefox-better-web">Firefox partnering</a> up with <a href="https://scroll.com">Scroll</a> and got curious. I didn't know abou Scroll before now, but Brave has a <a href="https://brave.com/brave-rewards/">similar program</a>, which this blog is signed up for.</p><p>Scroll and Brave is two services, who both removes ads from website, but still gives the creators money. How they differ is what they do on websites which aren't partnering with the respective service. Brave completely removes ads regardless of if the website partners with them or not, whereas Scroll only removes ads from partnering sites. Brave also has a tipping service, and while it is possible to tip to non-partnering creators, Brave warns you about doing so.</p><p>Personally I'm uncomfortable blocking ads from websites, knowing they won't get my penny. I pay for YouTube Premium for this exact reason. My browser of choice isn't Chromium based, so Brave is a no go for me. Scroll on the other hand has both a <a href="https://apps.apple.com/dk/app/scroll-for-safari/id1477273814?mt=12">Safari extension</a> as well as an <a href="https://apps.apple.com/dk/app/scroll-a-better-internet/id1399133488">iOS app</a>, which only works when you pay the $5 monthly fee.</p><p>Everyone has their way of dealing with ads, some people have ad blockers, others just ignores them. When I visit a website which doesn't respect me and just vomits ads all over, I just exit said website. With that said, Scroll offers a great alternative to ads, and I'm excited to see more publications partnering up with them! Their cross-platform nature have me subscribed for sure.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/spm-xcode-and-working-diroctories</guid><title>SPM, Xcode and Working Directories</title><description></description><link>https://www.inuk.blog/posts/spm-xcode-and-working-diroctories</link><pubDate>Thu, 26 Mar 2020 14:54:00 +0100</pubDate><content:encoded><![CDATA[<p>If you've coded Vapor or any other SwiftPM project on mac, you may have found yourself in need of retrieving somethign from a relative path of the working directory. If you run the program from the command line, everything is okay, but Xcode has working directory a weird place. This is a short guide on how to change that.</p><p>First: Open the SwiftPM project as you usually do.</p><p>Second: Open the scheme editor, this can be done by option clicking the run button: <img src="https://www.inuk.blog/content/images/2020/03/Screenshot-2020-03-26-at-15.49.42.png"/> Third: Navigate to "Working Directory" in Run -&gt; Options. Check the check box and write the absolute path to your project, or wherever you want the working directory to be at! <img src="https://www.inuk.blog/content/images/2020/03/Screenshot-2020-03-26-at-15.50.19.png"/> That's all really, remember this is a user setting, and should be set by everyone who uses Xcode in your team. It's not embarrassing to forget to set this on new projects, I unfortunately do that all the time 😅</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/bookwalker-user-hostile-drm</guid><title>"BookWalker: User Hostile DRM"</title><description>It's not secret that I'm against DRM. Yet I somehow manage to often find myself on platforms with user hostile DRM, BookWalker is one such platform.</description><link>https://www.inuk.blog/posts/bookwalker-user-hostile-drm</link><pubDate>Mon, 16 Mar 2020 19:19:00 +0100</pubDate><content:encoded><![CDATA[<p>It's not secret that I'm against DRM. Yet I somehow manage to often find myself on platforms with user hostile DRM, BookWalker is one such platform.</p><h2>Bad user experience</h2><p>Their mobile app isn't <em>the worst, </em>and recently got better. The app is still slow to boot and doesn't support dark mode, though that is my only real complaint about the mobile app.</p><p>While they "do have" a desktop app, it's not maintained and won't even launch on macOS Catalina. The web viewer doesn't support HTML5 offline mode, making the mobile app the only option for offline reading. This is an issue because the web viewer loads sluggishly, making the reading on computer a bad experience.</p><p>I feel like a second class citizen when I use bookwalker on desktop. I don't currently have a tablet and prefer to read on a larger screen, so I tend to read on my laptop. BookWalker really discourages me from doing so due to the slow loadings and lack of offline reading.</p><h2>The Lock In</h2><p>A popular DRM is Adobe Digital Editions, in short it allows a given customer to get their books into any approved reading application. I happen to have a tool that also allows me to read books in reading applications which aren't approved as well, so I can enjoy my purchased books in any way I prefer.</p><p>My issues with BookWalker would be easily solved if they supported ADE, however BookWalker is the <em>only</em> digital store I know of that doesn't support ADE. There's no way for me to get the books out of the platform in any shape or form.</p><h2>Conclusion</h2><p>BookWalker is a walled garden, even more tightly closed than the Apple Ecosystem, with no way out and a user hostile desktop experience. I honestly only ever use BookWalker when others gift me books or if I <em>really</em> want to read a exclusive.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/elgato-siri</guid><title>Elgato 💙 Siri</title><description>New Strem Deck update for iOS allows for Siri Shortcuts integration, here's how to use it.</description><link>https://www.inuk.blog/posts/elgato-siri</link><pubDate>Tue, 10 Mar 2020 17:01:00 +0100</pubDate><content:encoded><![CDATA[<p>Elgato announced earlier today that, amongst their <a href="https://twitter.com/elgatogaming/status/1237407940471959552?s=20">new Android app</a>, the iOS app now supports Siri Shortcuts.</p><blockquote class="twitter-tweet"><p lang="en" dir="ltr">Introducing Stream Deck Mobile for Android.<br><br>The power of Stream Deck. Now on your Android phone or tablet.<br><br>Available today from the Google Play Store.<br><br>Learn more: <a href="https://t.co/4cOCp0KEF4">https://t.co/4cOCp0KEF4</a> <a href="https://t.co/RkHMl8Vz6Q">pic.twitter.com/RkHMl8Vz6Q</a></p>&mdash; Elgato (@elgato) <a href="https://twitter.com/elgato/status/1237407940471959552?ref_src=twsrc%5Etfw">March 10, 2020</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>This means, people who have iPhones, and pay for the 25,- monthly sub, can now automate their computers.</p><p>Setting the shortcuts up with the streamdeck app is easy.</p><ul><li>First step is to ensure that the desktop app is on version 4.6 and the mobile app is on 1.1, otherwise the system will not be able to be set up.</li><li>Once this is ensured, there's going to be a microphone button in one of the corners, press this.</li></ul><img src="https://www.inuk.blog/content/images/2020/03/image-2.jpeg"/><p>Elgato Stream Deck main screen - Choose your desired action and press the "add to Siri" button:</p><img src="https://www.inuk.blog/content/images/2020/03/image-1.png"/><p>Shortcuts screen - On the following screen, scroll down to the "Add to Siri" button once more</p><img src="https://www.inuk.blog/content/images/2020/03/image-3.png"/><p>Add to Siri screen And the best part of it all is, once the action has been added to siri shortcuts, you can modify newly added shortcuts as you please, making strong automated integrations with the computer and iPhone through the elgato stream deck app: <img src="https://www.inuk.blog/content/images/2020/03/image-4.jpeg"/>Siri Shortcuts screen</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/class-vs-struct-swift</guid><title>Class vs Struct Swift</title><description></description><link>https://www.inuk.blog/posts/class-vs-struct-swift</link><pubDate>Mon, 9 Mar 2020 20:31:00 +0100</pubDate><content:encoded><![CDATA[<p>There are a few meta-types in Swift, two of which looks similar at phase value. But the difference can really end up biting you if you're not careful. But what exactly is the difference?</p><h2>Pass by Reference vs. Value</h2><p>The difference between Class and Struct basically boils down to what <code>a</code> prints in following sample:</p><pre><code>     <span class="keyword">var</span> a: <span class="type">Foo</span> = <span class="type">Foo</span>(bar: <span class="number">1</span>)
    <span class="keyword">var</span> b = a
    	b.<span class="property">bar</span> += <span class="number">1</span>
    <span class="call">print</span>(a.<span class="property">bar</span>)
</code></pre><p>In a case where <code>Foo</code> is a class, <code>b</code> and <code>a</code> references the same object, this is becaus class is pass by reference. This means modifying <code>b</code> also directly modifys <code>a</code>, and as such, <code>a.bar</code> is now 2.</p><p>Structs on the other hand are pass by value, meaning the object of <code>a</code> is getting copied into <code>b</code></p><h2>When should I use either?</h2><p>Due to this behaviour, I personally prefer to use class to represent external data. This external data includes,</p><ul><li>databse table (<a href="https://theswiftdev.com/a-tutorial-for-beginners-about-the-fluent-postgresql-driver-in-vapor-4/">fluent</a>).</li><li>external files and <a href="https://github.com/Human-Entertainment/BookKit/blob/master/Sources/EpubKit/ePub.swift">books</a></li><li>windows.</li></ul><p>All these changes at times, and beyond the developers control, as such I like to represent them as classes in my code, as references.</p><p>For everything else, I use structs wherever it makes semanthic sense to me. So that's data that's inside the app.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/how-i-rip-my-bds-for-plex</guid><title>How I Rip My BD's for Plex</title><description>Ripping discs for use with Plex is easy and fast. Click here to know more!</description><link>https://www.inuk.blog/posts/how-i-rip-my-bds-for-plex</link><pubDate>Tue, 3 Mar 2020 13:43:00 +0100</pubDate><content:encoded><![CDATA[<p>I've successfully publidshed a post every monday the last month or so, and I plan to have the first monday in the month be about home servers. My home server runs FreeBSD, and last time I tried to compile Swift for it, <a href="https://bugs.swift.org/browse/SR-10494">it didn't go to well</a>, so I can't tack that on this umbrella. Instead I'll go through my how I take my Blu-Ray's and put them on my Plex server, this is legal in my country, as it's to view on an otherwise unsupported device (my phone, laptop or Apple TV).</p><h2>The Tools</h2><p>My Blu Ray drive is the <a href="https://www.proshop.dk/Optiske-Drev-DVD-BR-Floppy/Hitachi-LG-BP55EB40-Bluray-BDRW-Braender-USB-20-Sort/2522229">LG BP55EB40</a>, which I got on a local drive. Currently I haven't found a way to flash it with firmware for region locked BD's, so for now I'm just getting region B discs.</p><h2>Process</h2><p>First I pick up the disc I intend to rip, and put it in the external BD reader.</p><p>I then open MakeMKV, and click the folder icon, when the disc has loaded. I Select my desired directory for saving the raw dump.</p><p>Once MakeMKV is done dumping the raw disc, I open HandBrake, and select the raw's folder as source, selecting each individual episode. Note that some episodes shows multiple times, remember to look at the small preview.</p><p>When all the encoding is done, it's time to move the encoded files to the desired directory. I have a NAS, where my Plex server lives, and put my media there.</p><h3>HandBrake Settings</h3><p>The container I use is MKV, while I have to transcode when watching on Apple TV as a result, I've experienced issues using the MP4 container, where audio and subtitles didn't carry, as a result I much prefer the transcoding.</p><p>I use <a href="https://www.makemkv.com">MakeMKV</a> for drm removal as well as raw dumping of the drive. I'm not a big fan of the encoding options, especially for series, so I use <a href="https://handbrake.fr">HandBrake</a> for encoding my raw BD dump. HandBrake is in my opinion much better for individual episode encoding.</p><p>I'm using the H.265 codec at 10-bit with the X.265 encoder, this makes for the smallest file sizes, though the difference between H.265 and H.264 are said to be negligable, so decide your codec on your own.</p><p>As for audio I use the pass-through option to not degrade the quality, and include Danish, Enlish and whatever the medias original language is. The Danish version is for younger family members, English is for those who prefer to hear and not read subtitles and the original audio track is for me, a complete sub over dub snob!</p><p>For subtitles I only include Danish and English, as I don't know anyone who needs other options.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/closures-functions-as-types</guid><title>"Closures: Functions as types"</title><description>If you've coded Swift for a short while, you may have experienced closures. Here's a short explanation of the concept.</description><link>https://www.inuk.blog/posts/closures-functions-as-types</link><pubDate>Mon, 24 Feb 2020 19:46:00 +0100</pubDate><content:encoded><![CDATA[<p>If you've coded Swift for a short while, you may have experienced them. They manifest in a few different but ultimately it's just functions as types and values, and it's pretty cool.</p><p>A short code sample would be something like:</p><pre><code>     <span class="keyword">var</span> closure: () -&gt; ()
</code></pre><p>This is a very simple uninitiated closure, which would look like this as a function:</p><pre><code>     <span class="keyword">func</span> myFunc() 
</code></pre><p>It doesn't take a parameter, and doesn't return one either. There are quite a few great ways to use closures, the one that come to most peoples minds is the following:</p><pre><code>     <span class="keyword">func</span> someFunctionThatTakesAClosure(closure: (<span class="type">String</span>) -&gt; (<span class="type">Int</span>)) {
    	<span class="call">print</span>(<span class="call">closure</span>(<span class="string">"Hello World"</span>)) <span class="comment">// prints whatever number the closure returns</span>
    }
    
    <span class="call">someFunctionThatTakesAClosure</span> { string <span class="keyword">in</span>
    	<span class="call">print</span>(string) <span class="comment">// this prints "Hello World"</span>
    	<span class="keyword">return</span> string.<span class="property">count</span> <span class="comment">// This will return 11</span>
    }
    
    <span class="keyword">func</span> printAndCount(string: <span class="type">String</span>) -&gt; <span class="type">Int</span> {
    	<span class="call">print</span>(string)
    	<span class="keyword">return</span> string.<span class="property">count</span>
    }
    
    <span class="call">someFunctionThatTakesAClosure</span>(closure: printAndCount) <span class="comment">// you can also pass in functions as long as it matches the closure, e.g. both `closure` and `printAndReturn` takes a String and return and Int</span>
</code></pre><p>Notice the signature of closure, it matches a func almost as if it's an <code>func closure(_:String)-&gt;String</code>. This is the signature that <code>someFunctionThatTakesAClosure</code> expects, and you can pass in anything as long as it matches. the <code>{ string in }</code> captures the parameter, and handles it as the constant <code>string</code>, like if we had the signature <code>(string: String)</code>.</p><p>A different way to handle functions as types would be in types. We can have the type:</p><pre><code>     <span class="keyword">struct</span> Button {
    	<span class="keyword">private(set) var</span> action: () -&gt; ()
    	<span class="keyword">init</span>(action: <span class="keyword">@escaping</span> () -&gt; ()) {
    		<span class="keyword">self</span>.<span class="property">action</span> = action
    	}
    }
</code></pre><p>Note the <code>@escaping</code> in the initialiser, this is because we're saving it so it sticks around after the function returns, which is what is called "escaping" in Swift</p><p>This gives us a type <code>Button</code> where each instance has it's own behavior on <code>action()</code>. The <code>private(set)</code> makes it so that we can't accidentally change a given instance's <code>action</code> property. This follow the same rules as with <code>myFunc</code>, so I can actually instanciate the button and use th property like so</p><pre><code>     <span class="keyword">let</span> printOne = <span class="type">Button</span> { <span class="call">print</span>(<span class="number">1</span>) }
    printOne.<span class="call">action</span>() <span class="comment">// prints 1</span>
</code></pre><p>And if you've played with Vapor for a bit, you might've noticed something. In Vapor we have the function for making get routes look as following</p><pre><code>     <span class="keyword">func</span> get&lt;<span class="type">Response</span>&gt;(<span class="keyword">_</span> path: <span class="type">PathComponent</span>..., use closure: <span class="keyword">@escaping</span> (<span class="type">Request</span>) <span class="keyword">throws</span> -&gt; <span class="type">Response</span>) -&gt; <span class="type">Route</span> <span class="keyword">where</span> <span class="type">Response</span> : <span class="type">ResponseEncodable</span>
</code></pre><p>There's a lot in this function to unwrap. Let's start from an end, the <code>&lt;Response&gt;</code> makes a generic type, which'll be used later. the <code>use closure: @escaping (Request) throws -&gt; Response</code> makes it so that the function can be called as: <code>get("index", use: myRoute)</code>. This function actually saves the closure to a big array behind the scenes, that gets evaluated on route calls, hence the <code>@escape</code>. The return type of the passed in function <em>has</em> to be <code>Response</code> and conform to <code>ResponseEncodable</code> as seen by the <code>where Response : ResponseEncodable</code>.</p><p>So in short, closures is a way to handle functions (and function signatures) as types, and thus pass functions around as you would instances of types. They're powerful, even not used in an asynchronous matter. And if you've used <code>.map</code> you've used closures before.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/drm-what-ist</guid><title>A Piece on DRM</title><description>DRM, short for Digital Rights Management, is a broad term for technical mechanisms to limit how customers can use media or devices they have paid for.</description><link>https://www.inuk.blog/posts/drm-what-ist</link><pubDate>Mon, 17 Feb 2020 17:44:00 +0100</pubDate><content:encoded><![CDATA[<p>I recently swiftly mentioned DRM over at <a href="https://mangaworthreading.co/monogatari-series-on-humblebundle-for-cheap/?utm=inuk.blog/drm-what-ist">MangaWorthReading</a>, and didn't feel it fitting getting deeper on that blog, so I decided to write my own blog post.</p><h2>Short about DRM</h2><p>DRM, short for <strong>D</strong>igital <strong>R</strong>ights <strong>M</strong>anagement, is a broad term for technical mechanisms to limit how customers can use media or devices they have paid for. This can be to prevent making illegal copies, but it's also used for artificial market segmentation or artificial product differentiation. There's a few ways DRM works, most common talked about in my circles, is where a piece of software authenticates the use of a product, like a game or movie. These systems can be everywhere from seamless and painless, like often is with iTunes, Google Play and Netflix, to slow, buggy and <a href="https://www.geek.com/games/ubisoft-uplay-drm-found-to-include-a-rootkit-1506163/">even hostile</a>.</p><h2>The Bad Stuff</h2><p>An issue with DRM is, the purchaser is constrained to use the product as intended, be it with only the intended software, in intended region or otherwise. The purchaser does not have the freedom of choice to do as they wish with the product. Often, the DRM refers to encrypting the product and contacting a server before the product can be used by the purchaser.</p><p>These two factors attributes to people calling DRM a rental or leasing contract, rather than an outright purchase. I've also heard people saying that buying digital will <em>always</em> mean renting the product, though there's a lot of digital stores: <a href="https://www.humblebundle.com/subscription?refc=Jzbial">HumbleBundle</a>, <a href="https://www.gog.com">GOG</a>, <a href="https://www.hdtracks.com">HDTracks</a> and more who pride themselves in selling DRM free. Well, in the case of HumbleBundle, it's a mixed bag of DRM-free and DRM'ed software.</p><h2>The Good Stuff</h2><p>It is not uncommon to see <a href="https://en.wikipedia.org/wiki/Code_signing">code signing</a> being used for DRM; iOS has no Apple endorsed way to <a href="https://en.wikipedia.org/wiki/Sideloading">sideload</a> apps, and while this is inconvinient for tinkeres, this is a means to protect the user from malicious software. The Apple provisioning tools are made in such a way that Apple can retroactively disable apps on all devices, made for malicious software that's slipped through App Review, but could be used if Apple no longer endorse a given app.</p><p>Android on the other hand, does allow for sideloading, <a href="https://www.howtogeek.com/313433/how-to-sideload-apps-on-android/">but is not enabled by default</a> for the same reason given for iOS. Google letting tinkeres install <em>any</em> app on their phones, enables for much greater flexibility, but I won't recommend sideloading to the average user, because of the higher risc of malicious software. There are ofcourse valid reasons to sideload, such as installing the <a href="https://www.amazon.com/getappstore">Amazon AppStore</a>.</p><h2>Conclusion</h2><p>Personally I try and shop DRM-Free whenever possible, I much prefer the freedom it gives and in cases where it's difficult to find a DRM-Free copy, it's fortunately <a href="https://kum.dk/kulturpolitik/ophavsret/ophavsret-paa-internettet/#c81808">legal in the Denmak</a> to remove DRM, if it's to use on an otherwise unsupported <em>personal</em> device. It has to be said that copying of digitally purchased material is illegal regardless of DRM or not, meaning that even sending your mates your copy of games from GOG is piracy, so please don't abuse abuse this power!</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/wwdc-2020-wishlist</guid><title>WWDC 2020 Wishlist</title><description>WWDC is closing in, and the lottery will open soon enough, but before then, I'd like to publish my wishes.</description><link>https://www.inuk.blog/posts/wwdc-2020-wishlist</link><pubDate>Mon, 10 Feb 2020 06:06:00 +0100</pubDate><content:encoded><![CDATA[<h2>Shortcuts</h2><p><a href="Last year">Last year</a> I got my wish of coupling Home automations with Shortcuts; in fear of flying too close to the sun and melt the wax off my wings, I hope for Apple to release an API for apps to donate events to Shortcuts automation as triggers. The idea is similar to WebHooks, where the events carries information the automation can consume, like if someone sends a message, who it is and what the message is.</p><p>And if that idea is not crazy enough, I'd also love to see Apple make automations more hands free. I want events and triggers to happen in the background, without me having to press a notification. I can see the security implication is there, that if someone gains access to a given persons phone, this system makes it easier to spy on them, but then make it more difficult for some on to breach this somehow?</p><h2>Apple TV</h2><p>While the Apple TV in the home app has gained a remote, a step up from just appearing last year, it doesn't do anything in regards to home. I'd love to see Apple do more with this appearance, like make it possible to control other CEC devices connected to the TV, and donate to Shortcuts and home for fancy automation. Let's take this a step further from last year, and make it so apps can donate events to my beforementioned automations system, and these events are sent to the users Shortcut app, much like how HomePod currently does it. This will use the Apple TV's user function better than is currently being used.</p><p>Speaking of the user function, I'd love to see app's adopt the user function, or maybe even be sandboxed by force. When I open YouTube today, it doesn't matter if I'm on my fiancée's or my profile, YouTube will still have it's own user selection with the same users regardless of who's signed in. If Apple sandboxes this, YouTube wouldn't even have to adobt new API's and could just continue as normal.</p><p>Last year the files app on iOS got first party support for SMB, this year, as with last year, I want SMB forwarding over the Apple TV and other Home hubs. Originally I wanted to hook my SMB server as an iCloud node for my own data, but realised that was too ambitious for now so SMB forwarding so I can access my network drive away from home.</p><p>These have been my 2020 WWDC wishes, let's see if any of them gets fulfilled this summer!</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/fluent-in-siblings</guid><title>Siblings in Fluent 4</title><description>Siblings are not difficult to work with in Fluent 4, so here's a short how-to.</description><link>https://www.inuk.blog/posts/fluent-in-siblings</link><pubDate>Mon, 3 Feb 2020 17:52:00 +0100</pubDate><content:encoded><![CDATA[<p>If you've read <a href="https://www.inuk.blog/tag/vapor/">my other Vapor 4 posts</a>, chance is that you use Vapor 4 yourself, and if that's the case you might have found yourself looking for sibling (many to many) relations between models.</p><p>Siblings in Fluent 4 is really easy to work with, once you get the hang of property wrappers. To get siblings working we need a pivot model, and if we take an example of users who owns books, we can have the following pivot:</p><pre><code>     <span class="keyword">final class</span> UsersBooks: <span class="type">Model</span> {
        <span class="keyword">static let</span> schema = <span class="string">"usersbook"</span>
        
        <span class="keyword">@ID</span>(key: <span class="string">"id"</span>)
        <span class="keyword">var</span> id: <span class="type">Int</span>?
        
        <span class="keyword">@Parent</span>(key: <span class="string">"user_id"</span>)
        <span class="keyword">var</span> user: <span class="type">User</span>
        
        <span class="keyword">@Parent</span>(key: <span class="string">"book_id"</span>)
        <span class="keyword">var</span> book: <span class="type">Book</span>
        
        <span class="keyword">init</span>() {}
        
        <span class="keyword">init</span>(userID: <span class="type">Int</span>,<span class="string">"bookID: Int) {</span>
            <span class="keyword">self</span>.$book.<span class="property">id</span> = bookID
            <span class="keyword">self</span>.$user.<span class="property">id</span> = userID
        }
    }
</code></pre><p>With each <code>@Parent</code> being the the models that needs to be related. This pivot allows us to bind multple books to multiple users, which I intend to use as books aren't exclusive to single users. Before we can bind this pivot to it's respective models, we also need to make a migration, I do it as follows:</p><pre><code>     <span class="keyword">extension</span> <span class="type">UsersBooks</span> {
        <span class="keyword">struct</span> Migration: <span class="type">Fluent</span>.<span class="type">Migration</span> {
            <span class="keyword">let</span> name = <span class="type">UsersBooks</span>.<span class="property">schema</span>
            
            <span class="keyword">func</span> prepare(on database: <span class="type">Database</span>) -&gt; <span class="type">EventLoopFuture</span>&lt;<span class="type">Void</span>&gt; {
                database.<span class="call">schema</span>(<span class="type">UsersBooks</span>.<span class="property">schema</span>)
                    .<span class="call">field</span>(<span class="string">"id"</span>, .<span class="dotAccess">int</span>, .<span class="dotAccess">identifier</span>(auto: <span class="keyword">true</span>))
                    .<span class="call">field</span>(<span class="string">"user_id"</span>, .<span class="dotAccess">int</span>, .<span class="dotAccess">required</span>)
                    .<span class="call">field</span>(<span class="string">"book_id"</span>, .<span class="dotAccess">int</span>, .<span class="dotAccess">required</span>)
                    .<span class="call">create</span>()
            }
            
            <span class="keyword">func</span> revert(on database: <span class="type">Database</span>) -&gt; <span class="type">EventLoopFuture</span>&lt;<span class="type">Void</span>&gt; {
                database.<span class="call">schema</span>(<span class="type">UsersBooks</span>.<span class="property">schema</span>).<span class="call">delete</span>()
            }
        }
    }
</code></pre><p>And remember to register it in <code>configure.swift</code> like you would any model. When this is all done, it's timne to add these to the models that needs to be glued together:</p><pre><code>     <span class="keyword">final class</span> User: <span class="type">Model</span>, <span class="type">Content</span> {
        <span class="keyword">static let</span> schema = <span class="string">"users"</span>
        
        <span class="keyword">@ID</span>(key: <span class="string">"id"</span>)
        <span class="keyword">var</span> id: <span class="type">Int</span>?
    
        <span class="keyword">@Field</span>(key: <span class="string">"email"</span>)
        <span class="keyword">var</span> email: <span class="type">String</span>
    
        <span class="keyword">@Field</span>(key: <span class="string">"password_hash"</span>)
        <span class="keyword">var</span> passwordHash: <span class="type">String</span>
        
        <span class="keyword">@Field</span>(key: <span class="string">"userRole"</span>)
        <span class="keyword">var</span> role: <span class="type">UserRoles</span>
        
        <span class="keyword">@Siblings</span>(through: <span class="type">UsersBooks</span>.<span class="keyword">self</span>, from: \.$user, to: \.$book)
        <span class="keyword">var</span> books: [<span class="type">Book</span>]
    
        <span class="keyword">init</span>() { }
    
        <span class="keyword">init</span>(id: <span class="type">Int</span>? = <span class="keyword">nil</span>, name: <span class="type">String</span>, email: <span class="type">String</span>, passwordHash: <span class="type">String</span>, role: <span class="type">UserRoles</span> = .<span class="dotAccess">everyone</span>) {
            <span class="keyword">self</span>.<span class="property">id</span> = id
            <span class="keyword">self</span>.<span class="property">email</span> = email
            <span class="keyword">self</span>.<span class="property">passwordHash</span> = passwordHash
            <span class="keyword">self</span>.<span class="property">role</span> = role
        }
    }
    
    ...
    
    <span class="keyword">final class</span> Book: <span class="type">Model</span>, <span class="type">Content</span> {
    	<span class="keyword">static let</span> schema = <span class="string">"books"</span>
    
    	<span class="keyword">@ID</span>(key: <span class="string">"id"</span>)
    	<span class="keyword">var</span> id: <span class="type">Int</span>?
    
    	<span class="keyword">@Field</span>(key: <span class="string">"title"</span>)
    	<span class="keyword">var</span> title: <span class="type">String</span>
    
    	<span class="keyword">@Siblings</span>(through: <span class="type">UsersBooks</span>.<span class="keyword">self</span>, from: \.$book, to: \.$user)
    	<span class="keyword">var</span> owners: [<span class="type">User</span>]
    
    	<span class="keyword">init</span>() {}
    
    	<span class="keyword">init</span>(id: <span class="type">Int</span>? = <span class="keyword">nil</span>, title: <span class="type">String</span>) {
    		<span class="keyword">self</span>.<span class="property">id</span> = id
    		<span class="keyword">self</span>.<span class="property">title</span> = title
    	}
    }
</code></pre><p>Note that <code>from</code> is the parent relation pointing to the current model, and <code>to</code> is the parent relation pointing to the related model. These two parent relations create a link from the current model to the target model via the pivot model. The siblings are not in the initilsation due to how they work in fluent, they're eager loaded which basically means they're automatically fetched by fluent on request.</p><p>Now that we have all this in place, we can finally find all books of a given user with the following:</p><pre><code>     <span class="keyword">func</span> usersCollection(req: <span class="type">Request</span>) <span class="keyword">throws</span> -&gt; <span class="type">EventLoopFuture</span>&lt;[<span class="type">Book</span>]&gt; {
        <span class="keyword">let</span> userID: <span class="type">User</span>.<span class="type">IDValue</span>? = req.<span class="property">parameters</span>.<span class="call">get</span>(<span class="string">"id"</span>)
        <span class="keyword">return</span> <span class="type">User</span>
            .<span class="call">find</span>(userID, on: req.<span class="property">db</span>)
            .<span class="call">unwrap</span>(or: <span class="type">Abort</span>(.<span class="dotAccess">notFound</span>))
            .<span class="call">flatMap</span> {
                <span class="keyword">try</span>! $0.$books
                        .<span class="call">query</span>(on: req.<span class="property">db</span>)
                        .<span class="call">all</span>()
            }
    }
</code></pre><p>While the <code>try!</code> looks scary, there is no need to worry; if there is no books for a given user, it'll just return <code>[]</code>, and we no there's a database connection because of earlier connection. When we need to attach a book to a owner, this method is what it takes:</p><pre><code>     <span class="keyword">func</span> addBook(req: <span class="type">Request</span>) <span class="keyword">throws</span> -&gt; <span class="type">EventLoopFuture</span>&lt;[<span class="type">Book</span>]&gt; {
        <span class="keyword">guard let</span> userID: <span class="type">User</span>.<span class="type">IDValue</span> = req.<span class="property">parameters</span>.<span class="call">get</span>(<span class="string">"id"</span>) <span class="keyword">else</span> { <span class="keyword">throw</span> <span class="type">Abort</span>(.<span class="dotAccess">notFound</span>) }
        <span class="keyword">guard let</span> bookID: <span class="type">Book</span>.<span class="type">IDValue</span> = <span class="keyword">try</span>? req.<span class="property">content</span>.<span class="call">decode</span>(<span class="type">Book</span>.<span class="type">PurchaseContent</span>.<span class="keyword">self</span>).<span class="property">id</span> <span class="keyword">else</span> { <span class="keyword">throw</span> <span class="type">Abort</span>(.<span class="dotAccess">notFound</span>) }
        <span class="keyword">_</span> = <span class="type">UsersBook</span>(userID: userID, bookID: bookID).<span class="call">save</span>(on: req.<span class="property">db</span>)
        <span class="keyword">return try self</span>.<span class="call">usersCollection</span>(req: req)
    }
</code></pre><p>It's worth considering making an extension to the model <code>User</code> with this function, so we don't need to pass parameters around. The <code>_ =</code> is to silence a warning, and I return <code>usersCollection</code> because I want to return something, alternatively it's worth consider return <code>200 success</code> or something to the like.</p><h2>Special Thanks</h2><p><a href="https://github.com/tanner0101">Tanner Nelson</a> for provding help on the <a href="https://discordapp.com/invite/vapor">Discord</a>.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/vapor-fluent-4-and-enums</guid><title>Roles and permissions with Vapor and Fluent</title><description>If you know about enums, you probably also get why they're handy and why I thought about using them for my User model, but but this was too difficult to implement in Fluent 4.</description><link>https://www.inuk.blog/posts/vapor-fluent-4-and-enums</link><pubDate>Mon, 27 Jan 2020 17:45:00 +0100</pubDate><content:encoded><![CDATA[<p>If you know about enums, you probably also get why they're handy and why I thought about using them for my <code>User</code> model, but but this was too difficult to implement in Fluent 4.</p><h2>What is an enum?</h2><p>It differs between languages, but in short it's a way for a programmer to restrict the amount of values a variable can have. If we take following Swift enum, we can better show the <em>power</em> of this restriction:</p><pre><code>     <span class="keyword">enum</span> UserRole {
        <span class="keyword">case</span> admin
        <span class="keyword">case</span> user
    }
    
    <span class="keyword">var</span> userRole: <span class="type">UserRoles</span>
</code></pre><p>With this enum <code>UserRoles</code> the variable <code>userRole</code> can only be either admin or user, and the compiler will <em>yell</em> at you for even considering other values.</p><h2>Come OptionSets</h2><p>Sometimes we need to turn on and off features individually instead of having entire and heavy roles. Meet <a href="https://developer.apple.com/documentation/swift/optionset">OptionSets</a>, a non-exlusion err.. set. We at Inuk Entertainment (I) have decided that OptionSet is the better choice for Manga.dk's CMS, and besides it allowing for more granular controle, it also plays much nicer with Fluent 4 than enums did. To make it work with Fluent 4, we have to conform it to <code>Codable</code> and add our own encoding and init as following.</p><pre><code>     <span class="keyword">struct</span> UserRights: <span class="type">OptionSet</span>, <span class="type">Codable</span> {
        <span class="keyword">init</span>(rawValue: <span class="type">UInt64</span>) {
            <span class="keyword">self</span>.<span class="property">rawValue</span> = rawValue
        }
        
        <span class="keyword">init</span>(from decoder: <span class="type">Decoder</span>) <span class="keyword">throws</span> {
          rawValue = <span class="keyword">try</span> .<span class="keyword">init</span>(from: decoder)
        }
        
        <span class="keyword">func</span> encode(to encoder: <span class="type">Encoder</span>) <span class="keyword">throws</span> {
          <span class="keyword">try</span> rawValue.<span class="call">encode</span>(to: encoder)
        }
        
        <span class="keyword">let</span> rawValue: <span class="type">UInt64</span>
    }
</code></pre><p>And when Fluent 4 asks, our optionset is UInt64 (this allows for 64 different options to turn on and off) and will look as follows in migration:</p><pre><code>     <span class="keyword">func</span> prepare(on database: <span class="type">Database</span>) -&gt; <span class="type">EventLoopFuture</span>&lt;<span class="type">Void</span>&gt; {
        database.<span class="call">schema</span>(name)
            .<span class="call">field</span>(<span class="string">"id"</span>, .<span class="dotAccess">int</span>, .<span class="dotAccess">identifier</span>(auto: <span class="keyword">true</span>))
            .<span class="call">field</span>(<span class="string">"name"</span>, .<span class="dotAccess">string</span>, .<span class="dotAccess">required</span>)
            .<span class="call">field</span>(<span class="string">"email"</span>, .<span class="dotAccess">string</span>, .<span class="dotAccess">required</span>)
            .<span class="call">field</span>(<span class="string">"password_hash"</span>, .<span class="dotAccess">string</span>, .<span class="dotAccess">required</span>)
            .<span class="call">field</span>(<span class="string">"userRights"</span>, .<span class="dotAccess">uint64</span>, .<span class="dotAccess">required</span> )
            .<span class="call">create</span>()
    }
</code></pre><p>This migration assumes my user model, which looks like this and has the OptionSet included below.</p><pre><code>     <span class="keyword">final class</span> User: <span class="type">Model</span>, <span class="type">Content</span> {
        <span class="keyword">static let</span> schema = <span class="string">"users"</span>
        
        <span class="keyword">@ID</span>(key: <span class="string">"id"</span>)
        <span class="keyword">var</span> id: <span class="type">Int</span>?
        
        <span class="keyword">@Field</span>(key: <span class="string">"name"</span>)
        <span class="keyword">var</span> name: <span class="type">String</span>
    
        <span class="keyword">@Field</span>(key: <span class="string">"email"</span>)
        <span class="keyword">var</span> email: <span class="type">String</span>
    
        <span class="keyword">@Field</span>(key: <span class="string">"password_hash"</span>)
        <span class="keyword">var</span> passwordHash: <span class="type">String</span>
        
        <span class="keyword">@Field</span>(key: <span class="string">"userRights"</span>)
        <span class="keyword">var</span> userRights: <span class="type">UserRights</span>
    
        <span class="keyword">init</span>() { }
    
        <span class="keyword">init</span>(id: <span class="type">Int</span>? = <span class="keyword">nil</span>, name: <span class="type">String</span>, email: <span class="type">String</span>, passwordHash: <span class="type">String</span>, userRights: <span class="type">UserRights</span> = .<span class="dotAccess">everyone</span>) {
            <span class="keyword">self</span>.<span class="property">id</span> = id
            <span class="keyword">self</span>.<span class="property">name</span> = name
            <span class="keyword">self</span>.<span class="property">email</span> = email
            <span class="keyword">self</span>.<span class="property">passwordHash</span> = passwordHash
            <span class="keyword">self</span>.<span class="property">userRights</span> = userRights
        }
    }
    
    <span class="keyword">struct</span> UserRights: <span class="type">OptionSet</span>, <span class="type">Codable</span>  {
        <span class="keyword">init</span>(rawValue: <span class="type">UInt64</span>) {
            <span class="keyword">self</span>.<span class="property">rawValue</span> = rawValue
        }
        
        <span class="keyword">let</span> rawValue: <span class="type">UInt64</span>
        
        <span class="keyword">func</span> encode(to encoder: <span class="type">Encoder</span>) <span class="keyword">throws</span> {
          <span class="keyword">try</span> rawValue.<span class="call">encode</span>(to: encoder)
        }
        
        <span class="keyword">init</span>(from decoder: <span class="type">Decoder</span>) <span class="keyword">throws</span> {
          rawValue = <span class="keyword">try</span> .<span class="keyword">init</span>(from: decoder)
        }
        
        <span class="comment">/// This is a given user, used for default Init in User</span>
        <span class="keyword">static let</span> everyone: <span class="type">Self</span> = []
        <span class="comment">/// Anyone with this priv can change a different user</span>
        <span class="keyword">static let</span> modUser = <span class="type">Self</span>(rawValue: <span class="number">1</span> &lt;&lt; <span class="number">1</span>)
        <span class="comment">/// This user can edit and add books to the system</span>
        <span class="keyword">static let</span> mangaUpload = <span class="type">Self</span>(rawValue: <span class="number">1</span> &lt;&lt; <span class="number">2</span>)
        
        <span class="comment">/// Has all the rights, you shouldn't check on this, only make a user super admin, also don't use .max, it will crash the system for currently unknown reasons</span>
        <span class="keyword">static let</span> superAdmin = <span class="type">Self</span>(rawValue: <span class="number">1</span> &lt;&lt; <span class="number">0</span>)
    }
</code></pre><p>Let's unravel a given option <code>static let mangaUpload = Self(rawValue: 1 &lt;&lt; 2)</code>. Static means it can be called without initialising the model it's part of, <code>Self</code> is a way to initialise an instance of the type the variable is part of and <code>1 &lt;&lt; 2</code> is 1 bitshifted 2 which in binary is <code>100</code> or 4 in the decimal system. So OptionSets very much prefers a value that is in the power of two, which is why it's much easier to just use bitshifting. This is because when an OptionSet has more than one value, it's "just" added, so <code>modUser</code> and <code>mangaUploader</code> will be <code>110</code>.</p><p>When all is set up, it's only a matter of doing checks of wether the user has a given permissiong with <code>myUser.userRights.contains(.modUser)</code> if I want to see if the user can mod a different user.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/plot-and-vapor</guid><title>Plot in Vapor</title><description>Plot + Vapor = &lt;3</description><link>https://www.inuk.blog/posts/plot-and-vapor</link><pubDate>Tue, 21 Jan 2020 06:27:00 +0100</pubDate><content:encoded><![CDATA[<p><a href="https://www.swiftbysundell.com">John Sundell</a> has released his DSL for HTML written Swift <a href="https://github.com/JohnSundell/Plot">Plot</a>. You may have wondered "how do I make it work with Vapor?" as did I, when I found <a href="https://medium.com/@andreabellotto88/how-to-use-plot-in-vapor-3-0-404316ce24c0">this article</a> telling how to make this work. The article is written for Vapor 3 and I want to focus on Vapor 4.</p><p>For beginner we need to make sure that we can even use Plot, to to this, add Plot to you Package.swift:</p><pre><code>     <span class="keyword">let</span> package = <span class="type">Package</span>(
      name: <span class="string">"Manga"</span>,	
      dependencies: [
        ...
        .<span class="call">package</span>(url: <span class="string">"https://github.com/JohnSundell/Plot.git"</span>, from: <span class="string">"0.5.0"</span>)
        ...	
      ],
      targets: [
        .<span class="call">target</span>(name: <span class="string">"App"</span>, dependencies: [
        	...
        	<span class="string">"Plot"</span>,
        	...
      	]),
      ...
      ]
    )
</code></pre><p>You can now begin using Plot when you pulled in your packages. The clever and impatient might notic that <code>func myRouter(req:) throws -&gt; EventLoopFuture&lt;HTML&gt;</code> is going throwing compile errors, so to support the <code>EventLoopFuture&lt;HTML&gt;</code> we need to extend <code>HTML</code> and add two functions like so:</p><pre><code>     <span class="keyword">import</span> Plot
    <span class="keyword">import</span> Vapor
    
    <span class="keyword">extension</span> <span class="type">HTML</span>: <span class="type">ResponseEncodable</span> {
            <span class="keyword">public func</span> encodeResponse(for request: <span class="type">Request</span>) -&gt; <span class="type">EventLoopFuture</span>&lt;<span class="type">HTML</span>&gt; {
            request.<span class="property">eventLoop</span>.<span class="property">submit</span>{<span class="keyword">self</span>}
        }
        
        <span class="keyword">public func</span> encodeResponse(for req: <span class="type">Request</span>) -&gt; <span class="type">EventLoopFuture</span>&lt;<span class="type">Response</span>&gt; {
            <span class="keyword">let</span> res = <span class="type">Response</span>(headers: [<span class="string">"content-type"</span>: <span class="string">"text/html; charset=utf-8"</span>], body: .<span class="keyword">init</span>(string: <span class="keyword">self</span>.<span class="call">render</span>()))
            <span class="keyword">return</span> res.<span class="call">encodeResponse</span>(for: req)
        }
    }
</code></pre><p>The first functions allows us to easily write a route that looks a little something like, and omit the <code>.render()</code> as that'be handled by the eventloop.</p><pre><code>     <span class="keyword">func</span> myRoute(req: <span class="type">Request</span>) <span class="keyword">throws</span> -&gt; <span class="type">EventLoopFuture</span>&lt;<span class="type">HTML</span>&gt; {
        <span class="type">HTML</span>(.<span class="call">body</span>(.<span class="call">p</span>(<span class="string">"Hello World!"</span>))).<span class="call">encodeResponse</span>(for: req)
    }
</code></pre><p>But without the latter function, we can't conform to <code>ResponseEncodable</code> which is important for the <code>EventLoopFuture</code>. The function also handles rendering the HTML for us, so we don't have to. And now you've added this extension, you can use Plot as much as you want in Vapor 4, just remember to chain <code>.encodeResponse(req)</code>!</p><p>Thanks to the <a href="[https://discordapp.com/invite/vapor](https://discordapp.com/invite/vapor">Vapor Discord</a> for typo fixes.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/siri-and-ios-13</guid><title>Siri and iOS 13</title><description>An all new Siri experience is coming in iOS 13</description><link>https://www.inuk.blog/posts/siri-and-ios-13</link><pubDate>Sun, 8 Sep 2019 18:43:00 +0200</pubDate><content:encoded><![CDATA[<p>This years announcements at WWDC were presented at their fastest pace yet, making it easy to miss some of the most important changes coming to your devices in September. This article will focus on Siri in iOS 13, and more specifically iOS 13.1 since some features were pushed back. Don't worry though, all the features will be available to the public shortly after the new iPhones drop. This is a brief overview, as I plan on more specific how to write ups in the future surrounding Shortcuts and other updates.</p><h2>Siri's Voice</h2><p>The nerds in the room know that when Apple acquired Siri from SRI, her voice was an amalgamation of a voice actress and computer voice generation. This all changes this fall since Siri's voice will now be fully generated from an advanced Machine Learning (ML) algorithm. This allows a voice that can constantly evolve to become more natural sounding, and increase the placement of Siri into more places, since the code base should be smaller, in theory. A more natural sounding voice assistant takes away some of the friction of talking to a computer, and will open up the boundaries to a more conversational assistant.</p><h2>Siri Intelligence</h2><p>Siri increasingly has a wider presence across iOS with every update, not just the voice, but other actions as well. This is called "Siri Intelligence" and drives systems like quick type suggestions, caller ID guessing, and suggested calendar inputs. Of course these systems are not really "Siri" in a sense, but because these are actions associated with what a personal assistant would accomplish, Apple attributes it to Siri. What ties them together is Apple's work to group all of iOS actions together in the background. Simple marketing? Sure, but lets not argue with what they want to call their ML.</p><p>With iOS 13, it will do even more to be proactive.If a friend sends you a link in iMessage, then you open Safari, your favorites page will have the link at the bottom of the page as a "suggested from imessage" section. Maps will surface recent searches or show you locations referenced in mail or messages. And now Siri will detect and suggest reminders you see in other apps. This is all done privately and locally of course, so no need to worry about your data being snooped. These little conveniences across the OS makes you want to go back to first party apps, because they are so well optimized to work with these features. Let's hope developers have some way to tie relevant data back to Siri as well, other than shortcuts of course.</p><h2>Shortcuts</h2><p>What was previously only available on the App Store, Shortcuts will now be a pre-installed app, and take a front position around the OS. Formerly workflow, Shortcuts has gone though some changes since its initial release under the new Apple moniker. System actions, automation, and share sheet tie ins are now the bedrock of the system, and will be facing every user, savvy or not. Suggestions for new shortcut actions appear throughout searches and menus, and the deep menu in settings for managing "donated" shortcuts is now moved to the gallery. No more need to differentiate between siri shortcuts, donated shortcuts, and in app shortcuts; its just Shortcuts in this release. <img src="https://www.inuk.blog/content/images/2019/09/IPhone-shortcuts-2-1.png"/>The new iconography and colors for Shortcuts stand out in Dark Mode On top of this, actions have been blown wide open to third party developers. Previously you would need a hacky URL scheme or clipboard manipulation to pass data from one shortcut or intent to another. Now developers can develop their app shortcuts to receive input from a step in the shortcut itself. This means you can more easily string shortcut actions together, and makes it much more user approachable to even the most green novice. Let's not forget that experts who live in the app day to day can donate their shortcuts via a link generated in app, so no matter your skill level, you are only a click away from a complex automation that will improve your life.</p><h3>Automation</h3><p>Shortcuts now contain the home app automations, and includes a new automation category called "personal." Shortcuts and HomeKit scenes can now be chained together and triggered by different events like time of day, location, and even an app opening. Apple has also opened up the NFC chip on newer model iPhones, XS and XR only for now, which allows a user to designate a specific NFC chip to trigger a specific action when tapped. HomeKit speakers are also included in this ability so now you can play specific playlists when certain conditions are met. These actions can be chained together in various complex ways, and in future write ups I plan on covering some of my favorite automations.</p><p>Chaining all of this together a user could:</p><ul><li>set home scene that turns the lights on and sets the temperature of their home</li><li>play a certain song or playlist on a specific airplay 2 device</li><li>text a loved one you have arrived, but only if the loved one is not home</li><li>turn on your Apple TV</li><li>launch a specific app on your TV</li></ul><p>All with the one condition that you've arrived home during a certain time frame. <img src="https://www.inuk.blog/content/images/2019/09/Image-9-8-19--12-57-AM.png" alt="The simplified shortcuts interface with this easy to do shortcut"/>The simplified shortcuts interface with this easy to do shortcut As of my writing this, my printer got an update to its app with siri shortcut support, so excuse me while I make a shortcut that will make it print "YOUR FIRED" in big letters like in 'Back to the Future'.</p><h2>Other Bits</h2><p>A new Indian accented English voice, multiple user support on HomePod, and shortcuts that can be conversational are coming as well, but are not yet implemented. We will have to wait for September to test the HomePod updates, since Apple does not have any beta for its OS. I'm testing a few apps with the new shortcuts systems and will be rebuilding all of my shortcuts from scratch to see how I can simplify them for the new updates.</p><p>Thanks for reading, and let me know on Twitter if you have any questions about Siri or shortcuts, I will help as best as I can. I also recommend giving <a href="https://twitter.com/mattcassinelli">@mattcassinelli</a> a follow as well, since he is the go to expert on automation with Siri.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/iphone-photography-workflow</guid><title>Shooting with iPhone</title><description>In the period since I got my iPhone, last November, until circa a month or so, I almost exclusively shot photos with the iPhone</description><link>https://www.inuk.blog/posts/iphone-photography-workflow</link><pubDate>Sun, 4 Aug 2019 18:47:00 +0200</pubDate><content:encoded><![CDATA[<h1>iPhone Photogrophy</h1><h2>Intro</h2><p>In the period since I got my iPhone, last November, until circa a month or so, I almost exclusively shot photos with the iPhone, and have barely been thinking about my beloved Sony a6000, let alone talk about my Contessa LK, two cameras I've otherwise loved to shoot with. Neither did I think about using my computer for post processing, and here's why.</p><p>Short story; I used my iPhone for the entire work-flow of photography, from shooting, post processing all the way to publishing. And with AirPrint, I only need to bring a printer into the work-flow, if I desire to get my images physical. This is simply because, bringing nothing but my keys and phone, is just so convenient, and the iPhone XS is just so fun to shoot with!</p><h2>Step one: Image Capture</h2><p>My app of choice for image capturing is <a href="https://halide.cam">Halide</a>, an amazing photography app exclusive to iOS devices. I've had good luck with <a href="https://www.shopmoment.com/moment-pro-camera-app">Moment</a>'s app, which offers the same control, and is also available for <a href="https://play.google.com/store/apps/details?id=com.shopmoment.momentprocamera">Android</a>.</p><p>The reason I prefer Halide over Moment, is because of Halide's simple UI.</p><img src="https://cdn.inuk.app/file/InukCDN/halide.png" alt="Halide Screenshot"/><p>Halide has everything in auto mode by default, but with quick and easy gestures, you can manually set most if not all settings related to the photo at hand.</p><p>Most of the time I don't need to dial any manual settings, as I'm mostly satisfied with what Halide brings in auto-mode. White Balance also leaves a lot to be wished for, but luckily Halide shoots raw (as do Moment). Halide also gives me depth mode, Halide's alternative to portrait, for my faux bokeh needs. More on this later.</p><h2>Step 2: Post Processing</h2><p>When doing post processing, I use two excellent, albeit iOS exclusive, apps: <a href="http://darkroom.co">Darkroom</a>, an alternative to <a href="https://www.adobe.com/products/photoshop-lightroom-classic.html">Lightroom</a>, and <a href="https://slor.app/">Slør</a>. For my Android friends I can recommend <a href="https://vsco.co">VSCO</a> and <a href="https://snapseed.online">Snapseed</a>, the latter being owned by Google and both being cross platform.</p><h3>Darkroom</h3><p>The purpose of Darkroom is to do some RAW processing of your photos. <a href="https://photographylife.com/raw-vs-jpeg#advantages-of-raw-format">This article</a> has a comprehensive explenation of RAW, but in short it's about control.</p><p>I prefer Darkroom over Lightroom for two simple reasons:</p><ol><li>Darkroom uses the iOS photo library, instead of its own.</li><li>Darkroom is a one time payment, whereas Lightroom requires an Adobe CC subscription, Darkroom even manages to be cheaper than a month the cheapest Adobe CC subscription with Lightroom.</li></ol><p>Darkroom doesn't lack anything I used from Lightroom, but it's not a complete replacement for everyone.</p><h3>Slør</h3><p>Slør, Danish for blur or bokeh, is like the blur tool from the photos app on steroids! This is the second and last app in my iOS photography work-flow, as Darkroom overwrites the settings I've burned in from Slør.</p><p>As mentioned Slør allows to make some very convincing faux bokeh, unfortunately not perfect, but for social media is a perfect tool! It's the best tool to add this fake bokeh, I've had my hands on, and has even convinced some of my friends and family. It has a huge library of settings, which allows the user to get the perfect blur on their photos.</p><p>I can generally recommend Slør on its own, with the caveat that it works best with dual lens iPhones, as they records the depth data into the metada. The team behind Slør recently released <a href="https://piculet.app">a new app</a> which looks promising. Piculet takes the depth data, like Slør, but instead of adding blur, it adds fun effects to the photo, like double exposure, and milky effects.</p><h2>Step 3: Publishing</h2><p>Us at Inuk Entertainment are rather privacy conscious, so fewest apps possible have access to my photos library. Amongst these apps, instagram is absent, but how do I then publish to my various social media? Luckily the apps I care about, is supported by the action sheet, so apps only have access to the images I give explicit permission to view.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/hillitechs-take-on-wwdc-2019-2</guid><title>HilliTech's WWDC 2019 Impressions</title><description></description><link>https://www.inuk.blog/posts/hillitechs-take-on-wwdc-2019-2</link><pubDate>Wed, 12 Jun 2019 23:09:00 +0200</pubDate><content:encoded><![CDATA[<p>June is always a busy month for nerds. Not only are we met with Apple's annual <a href="https://developer.apple.com/wwdc19/">Worldwide Developer Conference</a> (WWDC), but E3 and other events as well. It can be a hard few weeks to keep track of all the information coming at you, even in a slow year. This years Apple event was anything but slow though, nearly three hours jam packed with information that barely scratched the surface of whats to come. Shifting the way we view devices and the world via a few software updates is no small task, but its one Apple takes on every year. The following paragraphs are a quick summary of what Apple announced, at least as quick as I can make it. If you want to see my opinions on the releases skip ahead to the impacts title at the end.</p><h2>Apple TV and Apple Watch</h2><p>First to the stage was Apple TV. You know its a big year when you get significant Apple TV updates! Multi-user support, big screen Apple Music lyrics that play along with the song, and xbox and playstation controllers now work on any Apple device. I am personally excited for the new underwater screensavers. Still wish there was a way to select which ones you want to show on screen specifically. <img src="https://www.inuk.blog/content/images/2019/06/IMG_0020.jpeg"/>These new faces and color options further strengthen customization on Apple Watch Moving right along, Apple Watch got some new watch faces, beautiful, yet a reminder that we would gain so much more with custom third party watch faces. You can now get chimes on the hour from a playful robin singing from your wrist. Major changes making the watch more independent of the iPhone, including independent apps that no longer need a phone counterpart, an App Store on the watch, and a streaming audio API. New health features like background noise level tracking to warn you when its too loud, activity data trends, and even cardio fitness level. These platforms are maturing at a good rate as we see how apple has pivoted from their early days of simple entertainment and fitness to being a central part of our daily life.</p><h2>iOS 13</h2><p>Next up is probably one of the biggest updates in years, iOS 13. Most importantly, it has been forked into two distinct naming systems; iOS 13 for iPhones and iPods, and iPadOS for all iPads. These systems are technically still iOS top to bottom, but by having different naming conventions for each it shows a renewed commitment to constant and reliable updates to the iPad software. This has been happening slowly for years due to each device having unique features,, but now its more official and hopefully will mean Apple has nowhere to hide and give us iPad features on the regular.</p><p>First, general speed boosts across the platform; Face ID is faster, apps launch up to two times faster, and app downloads are 50-60% smaller. Finally seeing some huge benefits from APFS shared libraries, meaning apps can share similar assets across the system without duplicating them. Keyboard improvements across the board allowing swipe typing, or in Apple parlance "glide typing" and the ability to create a small floating keyboard on the iPad. This floating keyboard is ideal for using iPad in tablet mode, and especially on iPad mini where having half the content covered up by the keyboard has always been an issue. <img src="https://www.inuk.blog/content/images/2019/06/IMG_0022.PNG"/>You can now easily hold the iPad in tablet mode and type one handed without obscuring content. You can now get fonts donated by apps, meaning you can manage fonts on a system level across apps. A revamped share sheet with suggestions based on routine and siri shortcuts built right into the menu. Messages got updates to allow submitting a name and photo to your contacts so they dont have to maintain this info themselves. Also you can now use @name to tag a person in a group chat to give them a notification specifically to bypass chat mutes. Safari got a huge update to allow desktop sites to display the way they should on tablet devices, and improved per site rules the user can generate like auto reader mode and desktop mode. Apple maps got a huge bump up with heavily detailed maps and its own google street view like service with fluid navigation through the 3D images. And a whole lot more, which will be covered in more detail over the coming months into the public release in September.</p><h2>iPadOS</h2><p>iPadOS got its own updates to go with its new name. A more dense home screen with a uniform number of apps across the top and side so your app arrangement does not change when rotating the device. Pinned widgets to the home screen and the ability to have the entire today view on the home screen. When you have an app in slide over, it can now be switched between every app open in slide over with a swipe across the bottom of the window, much like iPhone X gestures. Now there is windowing in ipadOS with unique workspaces maintained per app, meaning you can have a different instance of the notes app open on three different apps. This is managed by tapping the icon in the doc to view all open windows of that specific app. iPad gains the iPhone XR contextual menus that replaced 3D Touch with a touch and hold gesture. Files app can now view external drives, connect to an SMB server, and native support for zip archives. The biggest feature for me with files app is the ability to connect my camera and import photos to a specific location in files, so i can import directly to an affinity photo project! <img src="https://www.inuk.blog/content/images/2019/06/iVBORw0KGgoAAAANSUhEUgAAC50AAAjwCAYAAAAKgq9xAAAACXBIWXMAAAsTAAALEwEAmpwYAAAM-2.PNG"/>My new home screen on iPadOS feels like its finally making good use of space.</p><h2>Miscellaneous</h2><p>Many of these features are small but important, and I wish I could cover them all in one write up, but in an effort to make this worth reading I'll keep it short. HomeKit secure video recordings that record 10 days worth of content for free without going against your iCloud storage. New "log in with Apple" feature that will let you log in with your Apple ID or a randomized email to any app or website that supports the feature. And since apple is making it a requirement, I'd say we will have plenty of opportunity to use it. I plan on moving as many logins as I can to this new service when it launches. CarPlay has major redesigned features like split view between maps and the active audio app. New screenshot tools including a new Apple Pencil gesture for taking screenshots and entering markdown immediately. And finally the Apple Pencil latency was vastly improved from 20ms to 9ms via software improvements.</p><p>Ok, I'm 1000 words in, tired yet? Next up is Dark Mode. Yes, it's cosmetics at its finest, but one of my most desired updates for the past few years. Once I discovered that apps could be something other than a blinding stark white background, I wanted it everywhere. I made it my mission to find the best places with dark mode support and implement them across my devices, but one group of apps stood out; Apple apps. Messages and notes being the worst of the bunch, I was aching for a native dark mode to cure my OCD on the matter. Now my apps are uniform and look amazing on both my OLED iPhone XS and my iPad Pro.</p><p>I'm not going to cover macOS or the Mac Pro today, and all that was left is the new AR kit updates. These included new reality kit which will work with AR kit to ensure that physics and space are respected together in an app. And the big one; people occlusion. Something that took massive computational power before is now possible native on your pocket computer. Even the early form of Minecraft Earth showed how powerful it was with very little error, so it can be expected this improves with time.</p><h1>Impacts</h1><p>All that being said, it was a huge update with years of work revealed on the stage. Lots of "finallys" and <a href="https://en.wikipedia.org/wiki/Sherlock_(software">Sherlocking</a>) occurred and I was very excited and hanging on every word of each presenter. Everything else aside, iPadOS is the greatest impact of all the updates. As a writer I now have better tools to manage my notes and documents without all the previous workarounds in files.app. As a photographer, my workflow is much more efficient because I can place my new RAW photos directly into my project folder for that shoot and bypass the photos app entirely. This is huge because private photos for my clients never have to touch my personal library now. In addition to better management of my local files, which is great on my 1TB iPad Pro, I can now backup project files, documents, and other data on an external drive while on the go. Heck, now I can plug in my iPad Pro with a usb C cable to my Logitech 4K display and be automatically connected to a keyboard, mouse, external drive, and ethernet, all over one cable, and finally have the full desktop experience on iOS. Even more so than ever, iPad is my primary machine. It acts as my desktop, laptop, and tablet with ease, and these updates have brought it to a whole new level of ease and functionality. I am excited to see third party vendors take full advantage of all the new APIs and systems in the next updates. <img src="https://www.inuk.blog/content/images/2019/06/IMG_4766.jpg"/>Sidecar lets me pretend Xcode is on my iPad... hope we get the real thing soon As I mentioned before, Apple went the extra mile to “Sherlock” some apps, many I used. Notes with rich formatting and dark mode has now replaced Bear. Auto unknown caller rejection has replaced my spam call blockers. Calendar with its full dark mode has won me back from fantastical. Sidecar on Mac has replaced duet display. Reminders and its updates took Things place as my reminders and todo list. Launch center pro is gone because NFC tags and location triggers are built into Siri shortcuts (more on this in a future post). And most of my file management apps and utilities are gone, replaced by a much more capable files app. Some of these apps still have functions that Apple does not provide, so chances are bear or launch center pro might come back. For now, I want to test the Apple apps.</p><h2>Missing features?</h2><p>What was left out? I've been asking people this on twitter and reddit, and am met with a universal response: Xcode. Yes, Xcode on iOS would be an amazing tool for us all. The ability to build and execute tools and apps on the same device, something computers have been able to do since their inception, is just out of reach for iOS users. Outside of that, very few things are left that needs addressing for most users. I stand firm that iOS 11 was the bar that set the device as a computer alternative for most users, iOS 13 just cements that further.</p><p>Now I have no doubts that out of Apple's 2 billion users, 80% or more could easily have all their needs met on iPad. A few missing points for me that seem more oversights than limitations; contacts group management, the ability to manually add and remove faces from photos facial recognition, and the ability to add music to you iCloud music library. These are the only things that just cant be done on iOS using apple apps. The contacts thing is easily handled by Cardhop, but face management and Apple Music management are impossible even with third party software. Outside of this, for me personally, I can think of nothing else that iOS provides as an obstacle.</p><p>I am very excited for everyone to use the public beta and release of these new updates. I hope you give me a follow on twitter and keep an eye on this blog for further coverage of the new operating systems. Thanks for reading!</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/martins-wwdc-2019-impressions</guid><title>Martin’s WWDC 2019 Impressions</title><description>WWDC is Apple’s annual developer conference. Worldwide audiences tune in for the opening year to see what the next year holds for them in terms of new features. In this post, I’ll detail what has me most excited and a little disappointed.</description><link>https://www.inuk.blog/posts/martins-wwdc-2019-impressions</link><pubDate>Wed, 5 Jun 2019 12:47:00 +0200</pubDate><content:encoded><![CDATA[<p>WWDC is Apple’s annual developer conference. Worldwide audiences tune in for the opening year to see what the next year holds for them in terms of new features. In this post, I’ll detail what has me most excited and a little disappointed.</p><p><em>...I would love to see multiple versions of an app supported in multitasking. Think finder tabs but for apps like Pages or Keynote...</em></p><p><strong>EDU Chat Podcast 30th May 2013 - WWDC Draft <a href="https://podcasts.apple.com/gb/podcast/edu-chat-podcast/id1352444179?i=1000440164324">Episode</a></strong></p><p>Right from the start, it was clear we were in for information overload. The speed and pace at which things were covered was jaw dropping. It was certainly a blink and you missed it approach. Both tvOS and watchOS were covered in the first 30mins or so. Covering the addition of multi user support and the ability to use 3rd party controllers from XBox and PS4 which was met with a lot of approval from the crowd. It was nice to see watchOS receive a little more attention, Kevin Lynch has certainly improved as a presenter. Some of the watchOS highlights for me include the new watch faces and the ability to use voice memos to quickly record thoughts. I’ve been a big fan of this functionality using Just Press Record and moving forward I’ll need to seriously consider whether I stick with it or make the switch completely to voice memos.</p><p>I’ve been a big fan of apps that incorporate a dark mode option. Whether on the screen of the XS Max or on my iPad Pro, I tend to stick with darker options so when they finally announced dark mode for iOS 13? I was in. All in. I can’t wait to get my hands on it and see what they plan system wide. The good news for apps that already employ this feature is that there will now be a consistency across the interface. Something that has me excited. Once I get a hold of a Mac Mini in my office I’ll be flashing the beta and having a go. I’ll share my thoughts on it later.</p><p>As this is my first post, you guys don’t know me so when I say iPadOS has me jumping for joy - you won’t realise that I do 100% of my work on an iPad Pro. I am very much of the #multipad lifestyle. I have a 12.9” as much main desktop iPad and my 11” is used when I am out and about with work. Automation, shortcuts, productivity tools - they all play a part in my daily life. There are limitations, sure but iPadOS seems like the step in the direction needed to really make the iPad vs Mac conversation easier. For a lot of people. Some of the things that have me hyped are:</p><p>• Multiple apps in slideover. As someone who moves between apps a lot this is a stand out feature for me. Think of it as an iPhone next to your main app</p><p>• Multiple instances of the same app - OMG! I live and breathe iWork. In my daily role I support schools and teachers in the use of technology to enhance teaching and learning. One of the key ways of working on iOS is using productivity tools such as iWork. Having multiple instances of notes or keynote open will increase my productivity rate 10x <img src="https://www.inuk.blog/content/images/2019/06/ipad-pro-12-folio-upright-2019-06-05-115526-4.jpeg" alt="IPad multitasking"/> • The new set of tools available for Apple Pencil. I use markup a lot. As a teacher, its a great way to detail information for students. Whether bringing objects to life for younger pupils or giving feedback to work submitted via AirDrop - markup is a big part of my daily workload. The new tools that are available anywhere will be perfect. Combine that with the new full-page markup features and there will be a lot of improvements for creating documents or examples. <img src="https://www.inuk.blog/content/images/2019/06/C325D0CF-B1D6-468F-AE1F-61FB8BCE5C35-4.jpeg" alt="Markup tools"/> • One area that wasn’t mentioned on stage but is in the iPadOS beta is mouse support. It currently supports wired and Bluetooth mouse input and simulates your finger taps. This is a MASSIVE step forward for accessibility and as someone who suffers from dexterity issues occasionally, I will definitely be using this feature.</p><p>One area that wasn’t addressed was how iPad and iPadOS deals with screen mirroring. Right now when you connect to an external monitor either via USB or AirPlay, it’s a direct mirror of what appears on your iPad screen. Now some apps take advantage of the second screen but its not System wide. In class we teachers often have our iPad connected to a screen via AirPlay. It's a great way to teach using the iPad but on occasion we would like to show the pupils one thing while working on another. Right now, iPadOS deals with screen mirroring the way it always has. I would love to see it change to screen extension. Sidecar does this with iPad and macOS so why not the other way. Give us the option to decide what is mirrored. We can switch between the screens in multitasking - or using gestures. Remember 5 finger swipe?</p><p>Maybe iPadOS 13.1. I can live in hope.</p><p>Consider reading our <a href="https://www.inuk.blog/tag/wwdc/">WWDC posts</a> to keep up to date with what's happening. I’ll be keeping an eye on sessions and will continue to share what I find interesting.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/bastians-wwdc-2019-impressions</guid><title>Bastian's WWDC 2019 Impressions</title><description>WWDC is Apples annual conference for developers, with an opening keynote that have enthusiasts world over excited to see what Apple brings to the table the next year. Following is what has me excited the most so far</description><link>https://www.inuk.blog/posts/bastians-wwdc-2019-impressions</link><pubDate>Tue, 4 Jun 2019 21:37:00 +0200</pubDate><content:encoded><![CDATA[<p>WWDC is Apples annual conference for developers, with an opening keynote that have enthusiasts world over excited to see what Apple brings to the table the next year. Following is what has me excited the most so far:</p><blockquote><p>"With HomeKit integrated into siri shortcuts, we could see the start of such automation..." <a href="https://www.inuk.blog/bastians-wwdc19-wish/">Bastian's WWDC Wish</a></p></blockquote><p>So the Shortcuts app, wrongly mentioned as "siri shortcut", got automation and triggers, akin to those in the Home App, and those in the home app is present in the Shortcuts App! This is so amazing, now I can turn on my NAS when I arrive at home, and turn it off when I leave!</p><p>Besides triggers, I also got Swift Package Manager, also known as SwiftPM and SPM, integration in Xcode. SPM is used by quite a few frameworks, such as Vapor, and is the first package manager integrated into Xcode.</p><p>SwiftUI is a new UI framework for all of Apples platforms with a display, at a glance, this new framework looks like a dream, and I am excited to play with it! It is also integrated with Interface Builder in a different way than before. Before Interface Builder would make an XML file, which you <em>could</em> reference to in your code, or you could code the UI programatically. With SwiftUI IB generates Swift code directly, and the dev doesn't have to decide between coding the UI or using IB. While you can't use Objective-C directly, SwiftUI seems to have <a href="https://developer.apple.com/tutorials/swiftui/interfacing-with-uikit">UIKit interop</a>.</p><p>It doesn't seem like I got SMB forwarding, though I did get SMB integration into the files app, so I remain hopefull. SMB in laymans terms, is a protocol which allows a given computer or home server to act as a netshare, a fancy way of saying external hard drive connected to your router. This is awesome for those of us who have precious images and documents on their home servers.</p><p>I didn't get HDMI-CEC tv control in the homes app either, so I'll shelf that until next years WWDC.</p><p>Consider reading our <a href="https://www.inuk.blog/tag/wwdc/">WWDC posts</a>, to keep up to date with what's happening this year, I'll keep an eye on sessions, and be sure to write on the stuff I find most interesting!</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/privacy-2019-part-three</guid><title>"Privacy 2019 Part Three: How To Use iOS To Secure Your Privacy and Safety Online"</title><description>How to use iOS and its apps to secure your privacy and safety online</description><link>https://www.inuk.blog/posts/privacy-2019-part-three</link><pubDate>Sun, 2 Jun 2019 00:56:00 +0200</pubDate><content:encoded><![CDATA[<p>After reading parts <a href="https://www.inuk.blog/privacypartone/">one</a> and <a href="https://www.inuk.blog/privacybandaidbullethole/">two</a> of my privacy series, I hope you have learned a bit about the world of data collection and the dangers therein. Part three is here to help you manage your data; from the simplest of tasks all the way to the most extreme. There will be four main steps to taking control of your data and privacy, so feel free to jump to what is most relevant to you first.</p><p>All of these tasks revolve around a conscious decision to manage your data, and as a part of that I recommend setting aside a Digital Wellness Day. This can be once a month or annually by your choice, and will be a “spring cleaning” but for your digital life. Hope you all gain something from this.</p><h3>Step 1: Minimize Your Digital Footprint</h3><p>This is the first and most important step in getting a proper hold on your digital life. Your data is strewn across the web, and it is being mined and collected in order to better target you. In order to get control of your data is first knowing where it is, what it is used for, and how to manage it. Also, ensure you only exist where you are active or needed; this means getting rid of any accounts you no longer use or access. You can minimize your footprint with the following:</p><p>-To start, there is a good online resource called <a href="http://simpleoptout.com">simple opt out</a> that has links to over 50 companies and websites to opt out of tracking.</p><p>-Use single email account for personal use, and have only as many primary emails as you need for business or school. <a href="https://www.idownloadblog.com/2018/12/10/create-gmail-email-alias/">Gmail</a> and <a href="https://support.apple.com/kb/ph2622?locale=en_US">iCloud Email</a> both offer the ability to create multiple email addresses that are tied to one main account, these are known as “alias emails”. I use my main Apple ID as my personal email, then use aliases for my photography business, tech writing business, and a third for potential spam dumps.</p><p>-Delete any accounts you are no longer actively using, anything from social media like facebook to instagram, or even gaming and shopping accounts. The only accounts worth keeping that you don’t use are ones with paid goods attached like Playstation or Nintendo. Otherwise delete away, and <a href="https://m.wikihow.tech/Main-Page">wikihow</a> is a good resource when its hard to find account deletion pages.</p><p>-Set up your accounts to be more private. No one in the public needs to see things like your full name, age, address, workplace, school system, education level, or friend list. Go through all your active social media and blogs and ensure these details are private or only visible to friends. There is an amazing app that is getting more great features all the time called <a href="https://itunes.apple.com/us/app/jumbo-privacy/id1454039975?mt=8">Jumbo</a>. This app will set your privacy settings on various social media, delete old tweets, and erase your google search history. As a privacy nerd, this app is indispensable, and completely safe.</p><p>-Don’t give random websites your email/phone number. Apps and websites like <a href="https://tempmail.net">tempMail</a> exist to give you a random email address and prevent you from filling your inbox with spam. Keep in mind this email deletes itself when you leave the page, so only use when email correspondence is not needed or you never intend on using the site or service again.</p><p>-Delete old photos on facebook. Don't use google photos, its just searching your photos and using them for more advanced data sets. Store your photos on device, in iCloud, and pay for higher storage(It really is quite cheap). Archive photos and videos using external memory cards or hard drives, or sign up for various privacy trusted data archival sites. Having old photos on social media serves no purpose except for creeps and stalkers to look at your history. Bare minimum photos should be a friend only setting. I recommend only keeping photos on social media for 1-3 years and doing an annual archival and deletion during your digital wellness day. It's easy to post and forget, but future employers and creditors love searching through your archives online.</p><p>-Remove friends from accounts you do not keep in contact with. Old relatives are not part of this, but if you have your high school friend you havent spoken to in a decade, its time for them to go. Especially remove people you dont know or have no memory of. You don’t want to be associated with someone you don’t know and have them reflect poorly on your character. Remember, social profiles are public and people and employers look and see who you associate with and what you do. <img src="https://www.inuk.blog/content/images/2019/06/E4471193-75FE-4A38-AD17-5B7A8ADD53FA.png"/>Facebook offers a decent set of privacy tools</p><h3>Step 2: organize your data</h3><p>-Use a password manager. This one is huge; many people use terrible passwords and repeat them across all their accounts. It is very important that you use different passwords on every account, and luckily you only need to remember one. The one for your password manager. Built into your iOS device is something called keychain. It stores all of your passwords from apps and websites. I prefer something more robust like <a href="https://itunes.apple.com/us/app/dashlane-password-manager/id517914548?mt=8">Dashlane</a> or <a href="https://itunes.apple.com/us/app/1password-password-manager/id568903335?mt=8">1password</a>, but the bare minimum is keychain.</p><p>-iCloud photos is a great way to keep all of your photos safe, backed up, and on all your devices. Apple is not looking at your photos and machine learning for facial and object recognition occur on the phone.</p><p>-Keep documents digital and safe. I save all of my important documents to iCloud Drive. No more physical cabinet with all your life's information inside. Lucky its safe on your device and in iCloud because of Apple’s attention to security and two factor authentication. I even scan in physical documents and shred them. You can scan documents into your files app with apps like <a href="https://itunes.apple.com/us/app/scanbot-pro-scanner-app-fax/id1007355333?mt=8">Scanbot</a>.</p><p>-Use tags to easily locate data in the files app. This way you can easily locate all of your files without having to remember the entire folder structure of you iCloud Drive.</p><p>-Keep track of what sites you have accounts with, which is easily done if you are using a password manager like I mentioned above. Saving a password will save the website its associated with. So your list of passwords doubles as a list of active accounts!</p><p>-Clean out your contacts, and I know this one seems silly, but you don’t know how easy it is to select the wrong person when you're drunk till you've done it. Don’t place yourself in compromising positions or accidentally contact someone you'd rather not.</p><h3>Step 3: implement active measures</h3><p>-Use a VPN like <a href="https://go.nordvpn.net/aff_c?offer_id=15&amp;aff_id=65&amp;source=inuk.blog">NordVPN</a> to hide your internet traffic from websites and even your Internet Service Provider.</p><p>-Go into Settings →Safari and check out what you have turned on and off. Make sure you select your favorite search engine, make sure you are blocking pop-ups, check off cross site tracking. You can even prevent websites from having default access to your camera and microphone or motion data. Wanna go all out and break some websites? Block all cookies; but you'll find the internet will fight you on this one.</p><p>-Content blocking was introduced in iOS 9 and not many people realize it exists. Think of ad blockers but more specific. I love <a href="https://itunes.apple.com/us/app/1blocker-x-faster-safer-web/id1365531024?mt=8">1BlockerX</a> more than others because it bypasses Apple’s limit on the number of filters that can be used. They have 115,000 rules!</p><p>-Call blocking and SMS filters will save you a lot of headache. Robocalls are at an all time high, and driving us all insane. Call blocking is easy with <a href="https://itunes.apple.com/us/app/nomorobo-robocall-blocking/id1134727588?mt=8">nomorobo</a> with its straightforward features, or <a href="https://itunes.apple.com/us/app/robokiller-spam-call-blocker/id1022831885?mt=8">Robokiller</a> which will get revenge on those telemarketers for you.</p><p>-<a href="https://itunes.apple.com/us/app/1-1-1-1-faster-internet/id1423538627?mt=8">1.1.1.1</a> is a free service from Cloudflare that will make browsing safer and faster by masking your DNS inquiries. Don’t worry if you don’t know what that means, just know its another vector for people to get data and track you. <img src="https://www.inuk.blog/content/images/2019/06/4ECC532D-9478-4387-8DFB-FC855F4DD0FD.jpeg"/>Robokiller, 1Blocker X, and 1.1.1.1 go a long way for providing peace of mind</p><h3>Step 4: use apps and services with privacy in mind</h3><p>-DuckDuckGo is my go to search engine. They don’t track you, don’t save a history, and don’t show biased results based on what they think you'll click on. Duck uses in line ads that are clearly labeled and shows results based on keywords. Give them a follow on twitter too, they are always sharing great tips.</p><p>-Apple Maps does not store your location history in an apple server in order to <a href="https://theintercept.com/2019/01/28/google-alphabet-sidewalk-labs-replica-cellphone-data/">sell a billboard you'll see on the way to work</a>. It started off terrible, I know, but it is night and day. Also, Apple Maps is getting major updates through the year, its the only map with privacy in mind.</p><p>-Apple apps offer the best privacy and encryption you can get for free. They are on your device and ready to go. Notes wont crawl your notes for potential ad revenue, and Apple Music isn’t selling your personal listening data. iMessage is the last but not least. End to end encryption and no need to worry about in line ads like facebook messenger.</p><p><strong>In Closing,</strong> you need to take control of your privacy and data. These major companies couldn’t care less about you or your safety as long as they make their money. Apple shouldn’t be implicitly trusted either, but Tim Cook being loudly <a href="http://time.com/collection-post/5502591/tim-cook-data-privacy/">vocal on privacy</a> and Apple literally telling the <a href="https://techcrunch.com/tag/apple-vs-fbi/">FBI</a> there was no chance at a back door is more than other companies are doing. In the end its up to you, be vigilant and pay attention to what you are putting out on the web.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/privacybandaidbullethole</guid><title>"Privacy 2019 Part Two: Band-aids for Bullet Holes"</title><description>Your privacy is at risk, and major companies make promises that seem to address this. But do they really?</description><link>https://www.inuk.blog/posts/privacybandaidbullethole</link><pubDate>Thu, 9 May 2019 17:42:00 +0200</pubDate><content:encoded><![CDATA[<p>Your privacy is at risk, and major companies are starting to take notice of users beginning to get paranoid. As i discussed in <a href="https://www.inuk.blog/privacypartone/">part one</a> of this three part series, we are in a rather dark place and our privacy and security are at more risk than ever. Facebook F8 and Google I/O have both come and gone, leaving us with more promises of a better and more private future on their platforms. I'd like to examine these new features and how they may help or hurt us going forward. Will the end result actually leave us more private and safe?</p><p>Let's get the easy one out of the way. Facebook did very little in terms of actual announcements outside of generalizations and promise of a brighter future. Hey, at least we got a redesign... again. Mark Zuckerberg pledged <a href="https://www.cbsnews.com/news/facebooks-promises-for-protecting-your-information-after-data-breach-scandal/">(again)</a> to make facebook a safer and more private platform. This time we know a bit more about how he wants to achieve that. First off a single messaging app for facebook, instagram and WhatsApp, which will be end to end encrypted, thus making facebook totally unaware of what is being sent between users. This is about the only useful thing announced, since, if done properly, it will actually allow users of this new app to discuss things without any data harvesting. Part of the redesign also places two recent features at the front; groups and secret crush. What does this do for user privacy? Nothing, and if anything, it is much worse. Instead of guessing that you love shoes, they know exactly because you joined a shoe appreciation group. Like tech? Joining that tech group will let facebook direct more tech ads at you. Secret crush? Go ahead and say goodbye to your most private desires with this one. Not only will facebook know who you desire, they now know your type and what interests draw your eye. Married and have a secret crush? Facebook can assume you might be struggling in your marriage and show you ads for anything from escort services, marital aids, or even counseling or lawyers. These two features allow facebook to shrink their guesswork even further to the point of knowing you better than you know yourself. So, as it always seems to be with facebook and privacy, one step forward, then two steps back. <img src="https://www.inuk.blog/content/images/2019/05/merlin_154184076_ff1677ee-6e0a-46ea-8a98-45d2390b6636-superJumbo.jpg"/>Facebook hopes to distract people from privacy problems with some gloss Now lets take a look at something a little more hopeful: Google. Yes, the advertising giant who knows everything about you, what you do, where you go, and what you buy is now concerned about privacy. But this time they mean it. At Google I/O, their annual developer conference, they announced many new features and initiatives towards a more private future. Now let me be clear, Google is still the giant, scary privacy monster right now, but if they implement all of the things announced, they will be closer to Apple than Facebook in terms of user privacy.</p><p>First and foremost, and their most important announcement, Federated learning. It's something that has existed for a while, but it is very difficult to implement at scale. Unlike Apple's <a href="https://www.apple.com/privacy/docs/Differential_Privacy_Overview.pdf">differential privacy</a>, which takes data and adds a bunch of noise to it to prevent it from being traced to source, <a href="https://youtu.be/gbRJPa9d-VU">federated learning</a> uses a machine learning model on device to study you and your on device data, it then alters the model to better serve you. Then it summarizes the changes to the model and shares it to an aggregate server. All of the summaries gathered are then analyzed for a trend and the findings are sent to update the global model. That way the model can improve, while user data remains on device. Federated learning is being tested in Gboard and will be rolled out to other services in the future. <img src="https://www.inuk.blog/content/images/2019/05/IMG_4209.jpg"/>Google says these features will be processed on device in the coming updates Google pledged to work on more tools that are visible to the user. Incognito mode in chrome does not save data to the device, maps incognito mode does not send user history to their profile, and Google search incognito prevents search history from being updated. Notice the language though? We don't have clear information on what is happening to the data except that it isn't being associated with the account. There could very easily be tracking occuring in these modes, just that the tracking isn't tied directly to you. This is unsettling to me and Google needs to clarify exactly how user data is handled in every circumstance.</p><p>These announcments come a week after it was revealed Google is implementing a feature to auto delete your user history. Further investigation reveals that the data deleted is held for a 3 month period to ensure deletion was wanted, then permanently deleted. This is nice, but the data has been taken, categorized, and added to algorithms well before deletion. This feature is mostly a placebo to placate users. Again, its almost like they care, but their baby steps are not even in the right direction.</p><p>Google tracking tools are opt out sadly. New users are set up to fully be tracked by google. This is one more thing they need to change going forward. There is very little that casual users can hope for right now in terms of privacy, since most users won't even know about these settings or what they mean. In contrast Apple puts privacy settings in front of users right at set up, then at any chance during normal use. All of their data collection and diagnostics are opt in. There are tracking indicator reset tools readily available as well. In these aspects, google has a long way to go.</p><p>These promises of a private future are actually pretty bittersweet. It seems Facebook and Google have pivoted to try and redefine user privacy. We privacy advocates define privacy as our right to have data and keep it for ourselves, and use tools to make that data useful while remaining ours. The tech giants new definition is simple, they want users to believe privacy is having less data, rather than none at all. That being said, there is a bright side. You can take control of your data and privacy today, and that is what my next post will be about; Privacy 2019 Part Three: How You Can Stay Safe.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/going-from-pocketcasts-to-overcast</guid><title>Going from PocketCasts to Overcast</title><description>Since I've got an iPhone back in November, I've experienced various issues with my podcatcher of choice, PocketCasts.</description><link>https://www.inuk.blog/posts/going-from-pocketcasts-to-overcast</link><pubDate>Thu, 9 May 2019 13:57:00 +0200</pubDate><content:encoded><![CDATA[<p>Since I got an iPhone back in November, I've experienced various issues with my previous podcast app of choice <a href="https://www.pocketcasts.com/">PocketCasts</a>. The app hangs at times, in the beginning it was only when I tried to resume an episode from the widget, but later became when I open the app, or worse, when I am navigating the app. This infuriates me, especially when I want to finish an episode, or go to the next podcast in my queue.</p><p>Overcast recently got a <a href="https://marco.org/2019/04/27/overcast-clip-sharing">new sharing functionality</a>, and I have been interested in switching to Overcast for a while, so this may push me over the edge.</p><p>The new feature lets an Overcast user share a short (up to a minute) snippet of a podcast, and share that with a nice preview thumbnail. <img src="https://marco.org/media/2019/04/shareclip.png"/>From <a href="https://marco.org/2019/04/27/overcast-clip-sharing">marco.org</a> &gt; <a href="https://overcast.fm/+LzqSd770Y/44:22">This remark on Unco</a> by <a href="https://www.relay.fm/people/stephenhackett">Stephen Hackett</a> inspired me to finally solve this problem in a way that worked easily, for all podcasts, for both podcasters and listeners to use.</p><p>This was a prime opportunity to switch, not that I expect to use this new feature much, but it <em>is</em> a nice to have for sure. So far Overcast has already been more stable than PocketCasts, and I'm still learning how to do stuff I'm used to in PocketCasts, but I think this is where I'll stay for a little while.</p><p>There are some paradigm differences between the two apps, Overcast has cards while PocketCasts has buttons in the player. The cards in Overcast lets you swipe between cards that display controls, show notes, or chapter markers. In PocketCasts all of those are placed in a menu bar underneath the player. <img src="https://www.inuk.blog/content/images/2019/05/Image.PNG"/>Overcast left(ads removable with IAP), PocketCasts Right The biggest differences I needed to get used to between the two apps: The podcast menu where your subscriptions are listed, and the queue managment. <img src="https://www.inuk.blog/content/images/2019/05/IMG_1734.png"/>Overcast queue is in a seperate menu as a playlist(left); Pocketcasts queue is under the player(right)<img src="https://www.inuk.blog/content/images/2019/05/IMG_1737.png"/>However, I do prefer the grid layout and discovery view in Pocketcsts I will be sticking with Overcast for the time being. Any updates will be posted here on my blog.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/about-the-blog-title-wip</guid><title>Full Transparency and Launch Post</title><description>We recently launched this blog, with Bastian's WWDC Wish, and some impressive page visits. We, Wesley and I, want full transparency between you, the reader, and us, so here's a small post on some decisions from the beginning.</description><link>https://www.inuk.blog/posts/about-the-blog-title-wip</link><pubDate>Wed, 8 May 2019 09:41:00 +0200</pubDate><content:encoded><![CDATA[<p>We recently launched this blog, with <a href="https://inuk.blog/bastians-wwdc19-wish/">Bastian's WWDC Wish</a>, and <a href="https://simpleanalytics.io/inuk.blog/">some impressive page visits</a>. We, <a href="https://www.inuk.blog/author/hillytech">Wesley</a> and <a href="https://www.inuk.blog/author/bastian">I</a>, want full transparency between you, the reader, and us, so here's a small post on some decisions from the beginning.</p><h2>Why did we choose Ghost as our CMS?</h2><p>Originally I wanted to make my own CMS, I once before made a simple blogging CMS in <a href="http://vapor.codes">Vapor</a>, which I later threw out the window. So I thought I could do it again in a short amount of time, but the task quickly became daunting. But I really wanted to launch the site so I could get Wesley onboard from the get-go. I started without a CMS, and I don't like the admin panel of <a href="wordpress.org">WordPress</a>, I wanted something self-hosted. I decided on <a href="https://ghost.org/">Ghost</a>, as I know one <a href="https://www.milanvit.net/">using it</a>, and being happy with it.</p><p>I didn't know much I'd love the CMS before installing it, my thought was to slowly replace parts, which I still might, as Ghost is much more modular than initially thought!</p><p>As an example of the modular structure; I am currently writing an <a href="https://github.com/Human-Entertainment/AppleNewsPusher">Apple News publisher for Ghost</a>, so we can easily push to Apple News, while just using a single front end. <a href="https://docs.ghost.org/api/?_ga=2.177940391.300750195.1557213044-1884705885.1554712874">Ghost's API</a> is exhaustive enough that it's possible to change the admin panel, make a custom front end, and suddenly Ghost is just an interface to a database. According to Ghost's website, big sites like <a href="https://www.apple.com/newsroom/">Apple Newsroom</a> is using Ghost, but that's not fully apparent on their site, which show's the extensibility of Ghost, or rather how easy it is to include Ghost in your current project.</p><h3>Apple News Publisher</h3><p>The flow of the publisher tool I'm writing will begin it's cycle with a text editor with <a href="https://daringfireball.net/projects/markdown/">Markdown support</a>, and uploaded to Ghost, <a href="https://blog.ghost.org/markdown/">which also supports Markdown</a>. When the article is published, <a href="https://docs.ghost.org/api/webhooks/">a Webhook</a> will be activated on a different server. The server then asks Ghost for a <a href="https://docs.ghost.org/api/content/#posts">list of all published articles</a>, parses that and pushes to <a href="https://developer.apple.com/news-publisher/">Apple News</a>.</p><p>In the future, I might make a publishing platform. This platform will send <a href="https://docs.ghost.org/api/admin/#creating-a-post">to Ghost</a> as well as Apple News, for better control, as Ghost's Webhooks only does <a href="https://www.w3schools.com/tags/ref_httpmethods.asp">basic get requests</a>.</p><p>I might not remove Ghost completely, but I could see myself playing with the modules for fun, while keeping the stable parts intact, until my fun becomes stable.</p><p>In the future, I'll also plan to make an <a href="https://en.wikipedia.org/wiki/ActivityPub">ActivityPub</a> translation layer, and maybe even release these tools for a source of income, if interest arise.</p><h2>Monetization</h2><p>Wesley and I hope to, in the near future, be making a decent penny for this project.</p><p>Part of why we want to publish to Apple News, is to get a revenue stream. We're also discussing various other revenue streams, sponsored content, ads, affiliate links and stuff like that.</p><h2>Analytics</h2><p>For analytics we use <a href="https://referral.simpleanalytics.com/bastian-inuk-christensen">SimpleAnalytics</a>, as they have a <a href="https://simpleanalytics.io/privacy">lucrative privacy policy</a>, something <a href="https://inuk.blog/privacypartone/">we highly value</a>. I feel confident in their privacy policy, due to the service <a href="https://simpleanalytics.io/#signup">not being a free service</a>. I have decided to keep the analytics <a href="https://simpleanalytics.io/inuk.blog/">open for anyone to see</a> for the sake of full transparency.</p><p>If you've got any questions, you're welcome to contact <a href="https://twitter.com/HilliTech">Wesley</a> or <a href="https://twitter.com/BastianInuk">I</a> on twitter.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/privacypartone</guid><title>"Privacy 2019 Part One: Where We Are Now"</title><description>In this three part series we will be looking at how privacy is handled in 2019. Part one is an overview of google and facebook, and how they affect privacy.</description><link>https://www.inuk.blog/posts/privacypartone</link><pubDate>Mon, 6 May 2019 17:11:00 +0200</pubDate><content:encoded><![CDATA[<p>It's been a busy week in the world of privacy, from Facebook telling a packed F8 conference that they will be <a href="https://newsroom.fb.com/news/2019/04/f8-2019-day-1/">respecting user privacy</a> going forward, to Google announcing new <a href="https://www.reuters.com/article/us-google-privacy-idUSKCN1SC1E4">privacy tools</a> that will delete history after a certain time. These promises are all quite amazing, but what do they really mean for users and their privacy? This is part one of three posts in a series.</p><p>First of all, I'd like to clear up some general misconceptions about how these companies work. They do not explicitly sell <em>your</em> data, no, because the data of an individual user is what is valuable to the company. It's like if Pepsi sold the formula to the product rather than the product itself. Rather, they sell data sets based on grouping people together and observing the trends. Then once the data collector observes a trend, they sell this knowledge via ad space or marketing suggestions. Alone your data is mostly innocuous, the comings and goings, purchases, and day to day contacts of the average American would not be very interesting. Rather, they get everything they can about everyone they can and pump it through some data analysis and learn things like; white men between 20-30 years of age purchase this deodorant at this frequency. With that information, a company like Axe can learn how to alter their formula to make men buy more products more often. This information is invaluable to marketers and researchers. <img src="https://www.inuk.blog/content/images/2019/05/Image-60.png"/>A vast majority of Google's Revenue is its ad business (around 80%) Now this is where you say, "But doesn't my data then provide me with a better service and as a result better products? So its a fair trade off?" Sadly the answer is no. The targeted ad business is booming, and the ones selling the data want the buyers to believe it is invaluable. This leads to more ads, more targeting, more clickbait, all to push revenue as high as they can. Some websites are so crowded with popups and banner ads that users are turning to ad block just to be sane. It only gets worse, now advertisers are <a href="https://futurism.com/japanese-taxis-facial-recognition-target-ads-riders">testing facial recognition technology</a> to show specific ads based on what they can determine based on your features. How much are we going to give up just to get better ads for better toothpaste? There has to be a point when people just throw their hands up in frustration right? Nope, turns out most people think that their data is unimportant or safe. How can that be the case when facebook increasingly <a href="https://www.wired.com/story/how-facebook-hackers-compromised-30-million-accounts/">loses valuable data to hacks</a> and <a href="https://www.cnet.com/news/millions-of-facebook-records-were-exposed-on-public-amazon-server/">unencrypted servers?</a> Now we see them promise, again, that they will change how they capture data and store it. How can we trust them?</p><p>Ok, you then think, "So what? I'm still getting services and products, privacy is not a concern for me. As long as I can search the web for anything and connect with anyone in the world, I think it is a fair trade." This is one of those things I cannot teach. You as a person must make the decision to want privacy and security, as long as you hold the mentality that <a href="https://www.forbes.com/sites/jacobmorgan/2014/08/19/privacy-is-completely-and-utterly-dead-and-we-killed-it/#32d5b55931a7">privacy is dead</a>, then it truly is. Losing control of internet accounts due to exposed passwords in a server or mass hacking of user information can be <a href="https://finance.yahoo.com/news/claim-hacker-caused-nearly-1-090033835.html">devistating</a>. The most <a href="https://www.forbes.com/sites/kateoflahertyuk/2019/04/21/these-are-the-worlds-most-hacked-passwords-is-yours-on-the-list/#304999e1289c">popular passwords in the US right now</a> are just laughable. Using any personally identifiable thing as a passcode or password is asking for trouble. Then on top of that, <a href="https://www.forbes.com/sites/forbestechcouncil/2019/04/12/why-reused-passwords-could-put-your-tax-information-at-risk/#33fae7ba41f5">people tend to reuse their passwords</a>, creating the perfect storm, one exposed account leads to easy access to your entire life. <img src="https://www.inuk.blog/content/images/2019/05/Image-61-1.png"/>Proper internet hygine requires some work, but is massively rewarding with peace of mind. Through all of this you might have noticed very little mention of Google, or links to their issues. Thats the thing, Google actually seems to care about the security of the user data that they collect, and they collect a lot. This data is so valuable that being trusted with it is paramount to their success as a company. That being said, privacy advocates, including myself, warn against overtly trusting Google. Just because it hasn't happened yet, does not mean it won't. There was a time that Facebook had not been compromised as well, and it will only take one big data dump for Google to lose a lot of the trust they desire. Well, at least there were only 3 active users of <a href="https://www.nytimes.com/2018/10/08/technology/google-plus-security-disclosure.html">Google+</a> when it was compromised. They have promptly promised to shut the service down because of it. Google is guilty of the same tracking as Facebook, if not more so, because they own most of the ad agencies online. If you use Google services and don't have proper tracking blocking set up, Google can know where you go, what you buy, who you see, where you stay for how long, who was with you, what card you used for a purchase at a gas station, what hospital or clinic you visited, where your mistress' home is, etc. All of this data is taken at massive volumes per person and stored in a server with your name and IP address attached to it. On top of that, they collect more data depending on what device you use, allowing Google to get <a href="https://digitalcontentnext.org/wp-content/uploads/2018/08/DCN-Google-Data-Collection-Paper.pdf">10X the data of an android user vs iOS user</a>.</p><p>This massive amount of data collection for one company, let alone storing it all together in their servers, leads to a massive risk. Imagine if a company said they would keep the world safe by storing all of the nuclear weapons, launch codes, and names of the enemy in the same building, would you feel protected? Apple, and Google to some extent, exercise a practice called <a href="https://www.apple.com/privacy/docs/Differential_Privacy_Overview.pdf">differential privacy</a> to hide user data amongst garbage data sets, then encrypting it locally. This means that even in the event of a data breach, there is little chance of a bad actor tracing data back to the end user. Apple does this with all of their gathered data about users and it is detailed in the linked report. I am not aware of the same practice being conducted to such an extent by any other company.</p><p>This is all to say that your privacy is at more risk than ever. I am not asking you to delete Facebook, quit Google, move to the country and dig a hole to die in, but I am asking for some more awareness and intent. Think about what you use and what you share, and find more private services online. Actually learn to skim through privacy policies to ensure you are not getting into deep water. Privacy is not dead, and it won't be as long as you and yours fight to protect it. This is part one of three in my privacy series, next up: <a href="https://www.inuk.blog/privacybandaidbullethole/">Band-aids for Bullet Holes</a>.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/how-to-add-apple-pay-to-itunes-for-purchases</guid><title>How to Add Apple Pay to iTunes/App Store for Purchases in iOS 12.3 beta</title><description>Apple finally gives users the option of adding Apple Pay as a payment method in iTunes and the App Store.</description><link>https://www.inuk.blog/posts/how-to-add-apple-pay-to-itunes-for-purchases</link><pubDate>Thu, 2 May 2019 19:43:00 +0200</pubDate><content:encoded><![CDATA[<p>Apple quietly added a feature to iTunes/App Store purchasing recently: the ability to add an Apple Pay card to your purchase account. Yes, a major feature is finally here. Friend of my <a href="https://discordapp.com/invite/guT6tf8">discord server</a> user name Bunker has shared their discovery. <em>update</em> This feature appears to be beta only, and will release with iOS 12.3. In the meantime, make sure you have Apple Pay set up.</p><p>First, open settings on your iOS device: <img src="https://www.inuk.blog/content/images/2019/05/PNG-image.png"/>First open the Settings App<img src="https://www.inuk.blog/content/images/2019/05/IMG_0768.jpeg"/>Click on your name, then payment and shipping<img src="https://www.inuk.blog/content/images/2019/05/IMG_0773.jpeg"/>Click on add payment method From here you will be shown the option of adding a card from your Apple Pay wallet.</p><p>That is it! Glad that Apple finally gave us this much requested option. For more Apple news and commentary follow me at <a href="http://twitter.com/hillitech">my twitter</a>.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/some-questions-about-dark-mode</guid><title>Some Questions About Dark Mode</title><description>Dark mode is coming, but what does that mean for users?</description><link>https://www.inuk.blog/posts/some-questions-about-dark-mode</link><pubDate>Thu, 2 May 2019 16:01:00 +0200</pubDate><content:encoded><![CDATA[<p>Yes, we all know that <a href="https://9to5mac.com/2019/04/15/ios-13-features-dark-mode/">dark mode</a> is coming. But something I have not seen being discussed is how it will be implemented. Dark mode as a system setting will change how iOS apps work, and could impact monetization targets. I am writing to pose some questions about dark mode to get us thinking more about the feature going into WWDC.</p><p>I have had a small obsession with finding apps with a dark mode. Even when on iPad, where I do not have the <a href="https://electronics.howstuffworks.com/oled5.htm">benefit of OLED</a>, I have found that I prefer gray color schemes. It feels easier on the eyes and does not light up a dim room with a bright white background. Gaining dark mode as a system setting will be a huge boon, especially when considering how blinding some apps can be.</p><p>Most apps hide their alternate color schemes behind a paid subscription or in app purchase. How will that change with iOS 13:</p><ul><li>Will system wide dark mode apply a filter across the OS and ignore dark mode apps? (I don't think so)</li><li>Will it be a targeted API that will respect a toggle in system settings? (Maybe)</li><li>Will it be a system settings menu that is like notifications where you go through and toggle dark mode on an app specific basis.(most likely)</li></ul><p>I like the idea of a simple toggle in settings that will do an all or nothing dark mode. Then below that toggle have a list of apps that support the dark mode API, and have a toggle that will tell the app to respect or ignore the system setting. This same toggle should be available as a setting in the app.</p><p>Another aspect of this: how will Apple respect color schemes? Will apps using the dark mode API be able to choose what gradient the user sees? Most likely Apple will require dark mode choose one of the preset color gradients used in safari reader mode. Customization has never been a strong suit on iOS. <img src="https://www.inuk.blog/content/images/2019/05/iVBORw0KGgoAAAANSUhEUgAAC50AAAjwCAYAAAAKgq9xAAAACXBIWXMAAAsTAAALEwEAmpwYAAAM-2-4.png"/> Even now I am typing this in drafts, which has many color choices and themes, I wonder how this app will be targeted. Will we see the app as a dark mode toggle in settings? Will the app have a menu to select what the dark mode toggle does, like which mode is used and what colors?</p><p>I hope we get the best of both worlds. Apple should have a targetable API that triggers either a gray or black mode in the app, then the developer can choose to just use Apple's default. The developer could do more work from there, and have the dark mode toggle trigger a custom setting controllable by the user in the app settings. This is best case scenario for the user and developer.</p><p>And my final thought; monetization. Will the API be able to be hidden behind an in app purchase? Or will Apple require dark mode support be a default setting that can't be placed behind paywall? The developer could then in theory make the more customizable settings be an in app purchase.</p><p>Regardless of what happens, having default apps like iMessage and News (not available in all countries) in dark mode will be a welcome change. Can't wait for WWDC so I can start testing all of this out. Follow me on <a href="http://www.twitter.com/hillitech">twitter</a> and check back here for my thoughts on Apple and technology.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://www.inuk.blog/posts/bastians-wwdc19-wish</guid><title>Bastians WWDC Wish</title><description>Currently HomeKit automation is totally isolated from Siri shortcuts. Hoping Apple changes this, this summer!</description><link>https://www.inuk.blog/posts/bastians-wwdc19-wish</link><pubDate>Thu, 2 May 2019 05:55:00 +0200</pubDate><content:encoded><![CDATA[<p>WWDC is only <a href="https://developer.apple.com/wwdc19/">5 weeks away</a>, so I figured i needed to capitalize on writing about it beforehand. Here is a feature set that could benefit us all if apple implemented it.</p><p>I started off with an iPhone XS that i got in November, and slowly purchased more automation equipment. My first was the <a href="https://www.ikea.com/us/en/catalog/products/70353343/">Ikea Trådfri</a> bulbs and gateway, then got an Apple TV to act as a home base. I have since considered setting up <a href="https://support.plex.tv/articles/115002267687-webhooks/">Plex</a>+<a href="https://www.npmjs.com/package/homebridge-http-webhooks">Homebridge</a> with Webhooks for more serious automation. Maybe even a popcorn machine, that way I can have my room ready for a movie, popcorn fresh and ready, and the movie up and ready to go with a simple command.</p><p>OK, all of this is possible now, so what about WWDC can improve this? The answer is Siri Shortcuts and HomeKit. Currently HomeKit automation is totally isolated from Siri shortcuts, and this is mostly due to shortcuts not accepting passive triggers. With the addition of passive triggers, automation would work much more in the way people believe it should. With HomeKit integrated into siri shortcuts, we could see the start of such automation, like when a person arrives home automatically running an app shortcut to turn on the lights and start playing music, and so on.</p><p>In addition to this, I've noticed the Apple TV appearing in the home app. Right now it doesn't seem to do anything, or even be added to automations. Despite HomeKit having <a href="https://www.imore.com/airplay-homekit-smart-tv">support for TVs</a>, homebridge taking advantage of this with <a href="HomeBrigde TV">plugins</a>, Apple has yet to allow me to control my Apple TV through HomeKit. So Apple, if anything, let me control my TV via the home app through the Apple TV this year!</p><p>A final wish of mine relates to <a href="https://support.apple.com/en-us/HT204618">Back to My Mac</a>. Now discontinued, you could previously connect your Mac and transfer data between devices securely on the home network. Now take that same concept and imagine being able to securely connect to your home or office network through <a href="https://www.apple.com/ios/home/">Apple TV or HomePod</a>, but with network drive support, and SSH into local servers without a VPN.</p><p>In short, one of my wishes for WWDC this year is tighter integration between Apple TV, HomeKit, and Siri Shortcuts!</p><p>Thank you so much for reading this pilot post! Any and all feedback is welcome.</p>]]></content:encoded></item></channel></rss>